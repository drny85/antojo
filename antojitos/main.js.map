{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/admin-order-details/admin-order-details.component.css","webpack:///./src/app/admin/admin-order-details/admin-order-details.component.html","webpack:///./src/app/admin/admin-order-details/admin-order-details.component.ts","webpack:///./src/app/admin/admin-products/admin-products.component.css","webpack:///./src/app/admin/admin-products/admin-products.component.html","webpack:///./src/app/admin/admin-products/admin-products.component.ts","webpack:///./src/app/admin/edit/edit.component.css","webpack:///./src/app/admin/edit/edit.component.html","webpack:///./src/app/admin/edit/edit.component.ts","webpack:///./src/app/admin/manage-addons/manage-addons.component.css","webpack:///./src/app/admin/manage-addons/manage-addons.component.html","webpack:///./src/app/admin/manage-addons/manage-addons.component.ts","webpack:///./src/app/admin/manage-category/manage-category.component.css","webpack:///./src/app/admin/manage-category/manage-category.component.html","webpack:///./src/app/admin/manage-category/manage-category.component.ts","webpack:///./src/app/admin/manage-flavor/manage-flavor.component.css","webpack:///./src/app/admin/manage-flavor/manage-flavor.component.html","webpack:///./src/app/admin/manage-flavor/manage-flavor.component.ts","webpack:///./src/app/admin/orders/orders.component.css","webpack:///./src/app/admin/orders/orders.component.html","webpack:///./src/app/admin/orders/orders.component.ts","webpack:///./src/app/admin/product-form/product-form.component.css","webpack:///./src/app/admin/product-form/product-form.component.html","webpack:///./src/app/admin/product-form/product-form.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/check-out/check-out.component.css","webpack:///./src/app/components/check-out/check-out.component.html","webpack:///./src/app/components/check-out/check-out.component.ts","webpack:///./src/app/components/delivery-confirmation/delivery-confirmation.component.css","webpack:///./src/app/components/delivery-confirmation/delivery-confirmation.component.html","webpack:///./src/app/components/delivery-confirmation/delivery-confirmation.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/myorders/myorders.component.css","webpack:///./src/app/components/myorders/myorders.component.html","webpack:///./src/app/components/myorders/myorders.component.ts","webpack:///./src/app/components/myprofile/myprofile.component.css","webpack:///./src/app/components/myprofile/myprofile.component.html","webpack:///./src/app/components/myprofile/myprofile.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/notfound/notfound.component.css","webpack:///./src/app/components/notfound/notfound.component.html","webpack:///./src/app/components/notfound/notfound.component.ts","webpack:///./src/app/components/order-success/order-success.component.css","webpack:///./src/app/components/order-success/order-success.component.html","webpack:///./src/app/components/order-success/order-success.component.ts","webpack:///./src/app/components/orders/order-details/order-details.component.css","webpack:///./src/app/components/orders/order-details/order-details.component.html","webpack:///./src/app/components/orders/order-details/order-details.component.ts","webpack:///./src/app/components/product-card/product-card.component.css","webpack:///./src/app/components/product-card/product-card.component.html","webpack:///./src/app/components/product-card/product-card.component.ts","webpack:///./src/app/components/product-filter/product-filter.component.css","webpack:///./src/app/components/product-filter/product-filter.component.html","webpack:///./src/app/components/product-filter/product-filter.component.ts","webpack:///./src/app/components/product-quantity/product-quantity.component.css","webpack:///./src/app/components/product-quantity/product-quantity.component.html","webpack:///./src/app/components/product-quantity/product-quantity.component.ts","webpack:///./src/app/components/products/products.component.css","webpack:///./src/app/components/products/products.component.html","webpack:///./src/app/components/products/products.component.ts","webpack:///./src/app/components/register/register.component.css","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/shipping-form/shipping-form.component.css","webpack:///./src/app/components/shipping-form/shipping-form.component.html","webpack:///./src/app/components/shipping-form/shipping-form.component.ts","webpack:///./src/app/components/shopping-cart-summary/order-review/order-review.component.css","webpack:///./src/app/components/shopping-cart-summary/order-review/order-review.component.html","webpack:///./src/app/components/shopping-cart-summary/order-review/order-review.component.ts","webpack:///./src/app/components/shopping-cart-summary/shopping-cart-summary.component.css","webpack:///./src/app/components/shopping-cart-summary/shopping-cart-summary.component.html","webpack:///./src/app/components/shopping-cart-summary/shopping-cart-summary.component.ts","webpack:///./src/app/components/shopping-cart/shopping-cart.component.css","webpack:///./src/app/components/shopping-cart/shopping-cart.component.html","webpack:///./src/app/components/shopping-cart/shopping-cart.component.ts","webpack:///./src/app/data-table/data-table.component.css","webpack:///./src/app/data-table/data-table.component.html","webpack:///./src/app/data-table/data-table.component.ts","webpack:///./src/app/guards/admin-auth.guard.ts","webpack:///./src/app/guards/auth-guard.service.ts","webpack:///./src/app/models/order.ts","webpack:///./src/app/models/shopping-cart-item.ts","webpack:///./src/app/models/shoppingCart.ts","webpack:///./src/app/routing/app-routes/app-routes.module.ts","webpack:///./src/app/services/addons.service.ts","webpack:///./src/app/services/admin-order-service.service.ts","webpack:///./src/app/services/category.service.ts","webpack:///./src/app/services/flavors.service.ts","webpack:///./src/app/services/logins/logins.service.ts","webpack:///./src/app/services/order.service.ts","webpack:///./src/app/services/product.service.ts","webpack:///./src/app/services/shopping-cart.service.ts","webpack:///./src/app/services/users/users.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".list-inline {\\r\\n    padding-left: 0;\\r\\n    list-style: none;\\r\\n    display: inline-flex;\\r\\n    margin-right: 10px;\\r\\n    font-style: italic;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"container\\\" #pdfcontent *ngIf=\\\"order\\\"> \\r\\n  <div class=\\\"row\\\">\\r\\n    <div col>\\r\\n        <h2 class=\\\"text-center mb-4 animated pulse text-capitalize\\\"><i class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i> {{ order.shipping.name }} {{ order.shipping.last_name }}`  Order Details</h2>\\r\\n        <p>Order Placed on {{ order.datePlaced }}  </p>\\r\\n       \\r\\n    </div>\\r\\n    <div *ngIf=\\\"order.status === 'delivered'\\\" class=\\\"col\\\">\\r\\n      <a [routerLink]=\\\"['/delivered/', order.id]\\\" class=\\\"btn btn-secondary float-right\\\"><i class=\\\"fa fa-print\\\" aria-hidden=\\\"true\\\"></i> Print Invoice</a>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <button (click)=\\\"goBack()\\\" class=\\\"float-right btn btn-dark\\\"><i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i> Go Back</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h2>Status: <span class=\\\"badge badge-secondary text-uppercase\\\">{{ order.status }}</span></h2>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <button (click)=\\\"showDetailsClicked($event)\\\" class=\\\"btn btn-outline-primary mb-2 mr-2 btn-block\\\">{{ buttonDetailsText }}</button>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <ng-template #content let-modal>\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Change Order Status</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n           <form #statusForm=\\\"ngForm\\\" (ngSubmit)=\\\"changeStatus(statusForm.value)\\\">\\r\\n             <h3 class=\\\"text-center\\\">Please Select a status</h3>\\r\\n             <div class=\\\"form-group\\\">\\r\\n               <label for=\\\"Status\\\">Status</label>\\r\\n               <select name=\\\"status\\\" [(ngModel)]=\\\"status\\\" id=\\\"status\\\" class=\\\"form-control\\\">\\r\\n                 <option disabled value=\\\"\\\">Select a status</option>\\r\\n                 <option value=\\\"in-progress\\\">In Progress</option>\\r\\n                 <option value=\\\"new\\\">New</option>\\r\\n                 <option value=\\\"almost-ready\\\">Praparing for Delivery</option>\\r\\n                 <option value=\\\"delivered\\\">Delivered</option>\\r\\n                 <option value=\\\"delayed\\\">Delayed</option>\\r\\n                 <option value=\\\"canceled\\\">Canceled</option>\\r\\n               </select>\\r\\n             </div>\\r\\n\\r\\n             <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Change Status</button>\\r\\n              </div>\\r\\n\\r\\n           </form>\\r\\n        </div>\\r\\n       \\r\\n      </ng-template>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <button class=\\\"btn btn-outline-primary mb-2 mr-2 float-right btn-block\\\" (click)=\\\"openVerticallyCentered(content)\\\">Change Status</button>\\r\\n    </div>\\r\\n  </div>\\r\\n<!-- order Details -->\\r\\n  <div *ngIf=\\\"!showDetails\\\"  class=\\\"table-responsive-sm table-responsive-md\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th>Item/Items</th>\\r\\n          <th>Quantity</th>\\r\\n          <th>Price</th>\\r\\n          <th>Total</th>\\r\\n        </tr>\\r\\n  \\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of order.items\\\">\\r\\n          <td><img  *ngIf=\\\"item.product.picture\\\" width=\\\"50\\\" height=\\\"50\\\" class=\\\"img\\\" src=\\\"{{ item.product.picture }}\\\" alt=\\\"\\\"></td>\\r\\n          <td class=\\\"text-capitalize\\\"><p class=\\\"font-weight-bold\\\">{{ item.product.name}}</p> <p><i>{{ item.product.flavors }}</i></p></td>\\r\\n          <td>{{ item.quantity }}</td>\\r\\n          \\r\\n          <td>{{ item.product.price | currency:'USD': 'symbol-narrow'  }}</td>\\r\\n          <td>{{ item.totalPrice | currency:'USD': 'symbol-narrow'  }}</td> \\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th></th>\\r\\n          <th></th>\\r\\n          <th>Grand Total</th>\\r\\n          <th>{{ order.grandTotal | currency:'USD': 'symbol-narrow' }}</th>\\r\\n        </tr>\\r\\n        <br>\\r\\n        <tr>\\r\\n          <th colspan=\\\"5\\\"> <h3 class=\\\"text-center alert alert-light\\\">Address Information <i class=\\\"fa fa-address-card\\\" aria-hidden=\\\"true\\\"></i></h3></th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>Adress/Street</th>\\r\\n          <th>Apt</th>\\r\\n          <th>City</th>\\r\\n          <th>Phone</th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td class=\\\"text-capitalize\\\"><i class=\\\"fa fa-home\\\" aria-hidden=\\\"true\\\"></i> {{ order.shipping.address }}</td>\\r\\n          <td class=\\\"text-uppercase\\\">{{ order.shipping.apt }}</td>\\r\\n          <td class=\\\"text-capitalize\\\">{{ order.shipping.city }}</td>\\r\\n          <td><i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i> {{ order.shipping.phone }}</td>\\r\\n\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"5\\\">\\r\\n            <div *ngIf=\\\"order.shipping.message != ''; else noMessage\\\" class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  Delivery Instruction\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <blockquote class=\\\"blockquote mb-0\\\">\\r\\n                    <p>{{ order.shipping.message }}</p>\\r\\n                    \\r\\n                  </blockquote>\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n              <ng-template #noMessage>\\r\\n                  <div class=\\\"card\\\">\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                          <h4 class=\\\"text-center\\\">No Instructuion submitted for delivery</h4>\\r\\n                      </div>\\r\\n                    </div>\\r\\n              </ng-template>\\r\\n            </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n  \\r\\n      </tfoot>\\r\\n  \\r\\n    </table>\\r\\n  </div>\\r\\n<!-- order instruction with ingridients -->\\r\\n<div *ngIf=\\\"showDetails && order\\\" class=\\\"table-responsive-sm table-responsive-md\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th>Item/Items</th>\\r\\n          <th>Quantity</th>\\r\\n          <th>Instructions/Addons</th>\\r\\n          <th>Special Instruction</th>\\r\\n          \\r\\n        </tr>\\r\\n  \\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of order.items; let i = index\\\">\\r\\n          <td><img  *ngIf=\\\"item.product.picture\\\" width=\\\"50\\\" height=\\\"50\\\" class=\\\"img\\\" src=\\\"{{ item.product.picture }}\\\" alt=\\\"\\\"></td>\\r\\n          <td class=\\\"text-capitalize\\\">{{ item.product.name }}</td>\\r\\n          <td>{{ item.quantity }}</td>\\r\\n          <td >\\r\\n              <ul class=\\\"list-inline\\\">\\r\\n                <li class=\\\"list-inline-item\\\"><p class=\\\"mr-5 text-capitalize\\\">{{ item.product.addons }}</p></li>\\r\\n              </ul>\\r\\n          </td>\\r\\n          <td>\\r\\n            <p class=\\\"font-weight-bold text-left font-italic\\\">{{ item.product.instruction }}</p>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n  \\r\\n      </tfoot>\\r\\n  \\r\\n    </table>\\r\\n  </div>\\r\\n  \\r\\n  </div>\\r\\n  \"","import { Location } from '@angular/common';\r\nimport { Subscription } from 'rxjs';\r\nimport { AdminOrderService } from './../../services/admin-order-service.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Order } from '../../models/order';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-admin-order-details',\r\n  templateUrl: './admin-order-details.component.html',\r\n  styleUrls: ['./admin-order-details.component.css']\r\n})\r\nexport class AdminOrderDetailsComponent implements OnInit, OnDestroy {\r\n\r\n  order: Order;\r\n  subscription: Subscription;\r\n  status: string = '';\r\n  showDetails: boolean = false;\r\n  buttonDetailsText = 'Show Order Instructions';\r\n\r\n  constructor(private adminOrders: AdminOrderService, \r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private location: Location,\r\n    private message: ToastrService,\r\n    private modalService: NgbModal) {\r\n\r\n   }\r\n\r\n async ngOnInit() {\r\n  let id = await this.route.snapshot.params['id'];\r\n  this.subscription = this.adminOrders.getOrder(id).subscribe(order => { this.order = order; console.log(this.order);\r\n   })\r\n   \r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  openVerticallyCentered(content) {\r\n    this.modalService.open(content, { centered: true });\r\n  }\r\n\r\n  // check delivered status\r\n  changeStatus(e) {\r\n  \r\n    if(e) {\r\n      if(e.status === 'delivered') {\r\n\r\n        this.order.delivered = true;\r\n        this.router.navigate(['delivered/'+ this.order.id]);\r\n\r\n      }else {\r\n        this.order.delivered = false;\r\n      }\r\n\r\n      this.order.status = this.status\r\n      this.adminOrders.updateOrder(this.order).then(() => this.message.success(\"UPDATED!\", \"Order has been updated\") ) ;\r\n    \r\n    }\r\n\r\n    this.modalService.dismissAll();\r\n  }\r\n\r\n  // change butto text\r\n  showDetailsClicked(e) {\r\n    this.showDetails = !this.showDetails;\r\n    let text = e.target.innerText as string;\r\n  \r\n    if (text.toLowerCase() === 'show order instructions' ) {\r\n      this.buttonDetailsText = 'Show Order Details';\r\n    } else if (text.toLowerCase() === 'show order details'){\r\n      this.buttonDetailsText = 'Show Order Instructions';\r\n    }\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"img {\\r\\n    width: auto;\\r\\n    height: 400px;\\r\\n}\"","module.exports = \"\\r\\n  <div>\\r\\n  <a class=\\\"pull-right\\\" routerLink=\\\"/admin/products/new\\\" class=\\\"btn btn-dark mb-5\\\">Add New Product</a>\\r\\n  \\r\\n  <input #query (keyup)=filter(query.value) type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"search\\\" id=\\\"search\\\" placeholder=\\\"Search.....\\\">\\r\\n</div>\\r\\n<br>\\r\\n\\r\\n\\r\\n<div>\\r\\n  <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n      <tr class=\\\"text-white bg-dark\\\">\\r\\n        <th>Name</th>\\r\\n        <th>Price</th>\\r\\n        <th></th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let prod of filtered\\\">\\r\\n        <td class=\\\"text-capitalize\\\">{{ prod.name }}</td>\\r\\n        <td> {{ prod.price | currency:\\\"USD\\\":\\\"symbol-narrow\\\" }}</td>\\r\\n        <td><a class=\\\"btn btn-block btn-secondary\\\" [routerLink]=\\\"['/admin/products/', prod.id]\\\" ><i class=\\\"fa fa-pencil-square-o\\\" aria-hidden=\\\"true\\\"></i> Edit</a></td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n    <tfoot>\\r\\n      \\r\\n    </tfoot>\\r\\n\\r\\n  </table>\\r\\n</div>\"","import { Product } from './../../models/product';\r\nimport { ProductService } from './../../services/product.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-products',\r\n  templateUrl: './admin-products.component.html',\r\n  styleUrls: ['./admin-products.component.css']\r\n})\r\nexport class AdminProductsComponent implements OnInit, OnDestroy {\r\n\r\n  products: Product[];\r\n  filtered: Product[];\r\n  subscription: Subscription;\r\n  // tableResource: DataTableResource<Product>;\r\n  items= [];\r\n  itemCount: number;\r\n\r\n\r\n  constructor(private productServ: ProductService) {\r\n    this.subscription = this.productServ.getProducts()\r\n    .subscribe(products => {this.filtered = this.products = products;\r\n\r\n    });\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  filter(query: string) {\r\n    this.filtered = (query) ?\r\n    this.products.filter(p => p.name.toLowerCase().includes(query.toLowerCase())) : \r\n    this.products;\r\n\r\n  }\r\n\r\n  // private initializeTable(products: Product[]) {\r\n\r\n  //   this.tableResource = new DataTableResource(products);\r\n    \r\n\r\n  //   this.tableResource.count()\r\n  //   .then(count => this.itemCount = count);\r\n  // }\r\n\r\n  // reloadItems(params) {\r\n  //   if (!this.tableResource) return;\r\n  //   this.tableResource.query(params)\r\n  //   .then(items => this.items = items);\r\n\r\n  // }\r\n\r\n}\r\n","module.exports = \"img {\\r\\n    width: auto;\\r\\n    height: 400px;\\r\\n}\\r\\n\\r\\n.list-inline {\\r\\n    padding-left: 0;\\r\\n    list-style: none;\\r\\n    display: inline-flex;\\r\\n    margin-right: 10px;\\r\\n    font-style: italic;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"product\\\">\\r\\n    <div>\\r\\n        <h3 class=\\\"text-center\\\">Update A Product</h3>\\r\\n      </div>\\r\\n      <br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-7 col-xs-12\\\">\\r\\n      <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(myForm)\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"item_name\\\">Product Name</label>\\r\\n              <input [(ngModel)]=\\\"product.name\\\" id=\\\"item_name\\\" type=\\\"text\\\" #prod_name=\\\"ngModel\\\" name=\\\"name\\\"  class=\\\"form-control\\\"\\r\\n              [ngClass]=\\\"{'is-invalid': prod_name.touched && prod_name.errors, 'is-valid': prod_name.valid}\\\"\\r\\n              required>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"prod_name.errors?.required\\\">\\r\\n                  Name is required..\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"item_price\\\">Price</label>\\r\\n              <div class=\\\"input-group-prepend\\\">\\r\\n                <span class=\\\"input-group-text\\\">$</span>\\r\\n                <input [(ngModel)]=\\\"product.price\\\" id=\\\"item_price\\\" type=\\\"number\\\" #prod_price=\\\"ngModel\\\" name=\\\"price\\\" [min]=\\\"0\\\" class=\\\"form-control\\\" \\r\\n                [ngClass]=\\\"{'is-invalid': prod_price.touched && prod_name.errors, 'is-valid': prod_price.valid}\\\"\\r\\n                required>\\r\\n              </div>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"prod_price.errors?.min\\\">\\r\\n                  Price should be 0 or higher\\r\\n              </div>\\r\\n              \\r\\n              \\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"item_category\\\">Category</label>\\r\\n              <select [(ngModel)]=\\\"product.category\\\" class=\\\"form-control text-capitalize\\\" #prod_category=\\\"ngModel\\\" name=\\\"category\\\" id=\\\"item_category\\\" \\r\\n              [ngClass]=\\\"{'is-invalid': prod_category.touched && prod_category.errors, 'is-valid': prod_category.valid}\\\"\\r\\n              required>\\r\\n                <option disabled value=\\\"\\\">Select a category</option>\\r\\n                <option class=\\\"text-capitalize\\\" *ngFor=\\\"let c of categories$ | async\\\" [value]=\\\"c.id\\\">{{ c.name }}</option>\\r\\n              </select>\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"prod_category.errors?.required\\\">\\r\\n                Category is required\\r\\n              </div>\\r\\n          </div>\\r\\n          <div *ngIf=\\\"flavorsList\\\" class=\\\"form-group\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select name=\\\"flavors\\\" [(ngModel)]=\\\"flavorsItem\\\" placeholder=\\\"Flavor\\\" [formControl]=\\\"flavors\\\" multiple>\\r\\n                  <mat-option class=\\\"text-capitalize\\\" *ngFor=\\\"let flavor of flavorsList;\\\" [value]=\\\"flavor.name\\\">{{\\r\\n                    flavor.name }}</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n              <div *ngIf=\\\"product.flavors; else noFlavors\\\">\\r\\n                  <p class=\\\"font-weight-bold\\\"> Flavors Already Included</p>\\r\\n                  <ul class=\\\"list-inline\\\" *ngFor=\\\"let item of product.flavors\\\">\\r\\n                    <li class=\\\"list-inline-item text-capitalize\\\">{{ item }}</li>\\r\\n                  </ul>\\r\\n                </div>\\r\\n           <hr>\\r\\n           <ng-template #noFlavors>\\r\\n              <p class=\\\"font-weight-bold\\\">No Flavors for this product</p>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n       \\r\\n            <mat-form-field>\\r\\n              <mat-select name=\\\"addons\\\" (change)=\\\"onChange($event)\\\" [(ngModel)]=\\\"addons\\\" placeholder=\\\"Addons\\\" [formControl]=\\\"toppings\\\" multiple>\\r\\n                <mat-option class=\\\"text-capitalize\\\" *ngFor=\\\"let topping of toppingList\\\" [value]=\\\"topping.name\\\">{{ topping.name }}</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <div *ngIf=\\\"product.addons; else noAddons\\\">\\r\\n              <p class=\\\"font-weight-bold\\\"> Addons Already Included</p>\\r\\n              <ul class=\\\"list-inline\\\" *ngFor=\\\"let item of product.addons\\\">\\r\\n                <li class=\\\"list-inline-item text-capitalize\\\">{{ item }}</li>\\r\\n              </ul>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <ng-template #noAddons>\\r\\n                <p class=\\\"font-weight-bold\\\">No Addons for this product</p>\\r\\n            </ng-template>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"pic\\\">Update Image</label>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-info btn-block\\\" (click)=\\\"item_pic.click()\\\">Select Image</button>\\r\\n          </div>\\r\\n          <div hidden class=\\\"form-group col\\\">\\r\\n            <input class=\\\"form-control\\\" type=\\\"file\\\" (change)=\\\"onUpload($event)\\\" name=\\\"pic\\\" id=\\\"pic\\\" accept=\\\".png,.jpg, .jpeg\\\"  ngModel #item_pic>\\r\\n        </div>\\r\\n        <br>\\r\\n        <div class=\\\"row form-group\\\">\\r\\n          <div class=\\\"col-md-6 col-xs-6\\\">\\r\\n              <button [disabled]=\\\"!myForm.form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-dark btn-block mr-5\\\">UpdateProduct</button>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 col-xs-6\\\">    \\r\\n          <button type=\\\"button\\\" (click)=\\\"delete()\\\" class=\\\"btn btn-danger btn-block\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i> Delete Product</button>\\r\\n          </div>\\r\\n        </div>\\r\\n          \\r\\n        </form>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-5 d-none d-sm-block\\\">\\r\\n        <!-- <div class=\\\"card\\\" style=\\\"width: 30rem;\\\">\\r\\n        <img class=\\\"card-img-top\\\" [src]=\\\"product.picture\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title text-capitalize\\\">{{ product.name}}</h5>\\r\\n          <p class=\\\"card-text\\\">{{ product.price | currency:\\\"USD\\\":\\\"symbol-narrow\\\" }} </p>\\r\\n        </div>\\r\\n      </div>\\r\\n       -->\\r\\n       <product-card [product]=\\\"product\\\" [show-actions]=\\\"false\\\"></product-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n \\r\\n</div>\\r\\n\"","import { FlavorsService } from './../../services/flavors.service';\r\nimport { Addons } from './../../models/addons';\r\nimport { AddonsService } from './../../services/addons.service';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { Product } from './../../models/product';\r\nimport { ProductService } from './../../services/product.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AngularFireStorage, AngularFireUploadTask } from 'angularfire2/storage';\r\nimport { CategoryService } from './../../services/category.service';\r\n\r\nimport { Component,  OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit',\r\n  templateUrl: './edit.component.html',\r\n  styleUrls: ['./edit.component.css']\r\n})\r\nexport class EditComponent implements OnDestroy{\r\n\r\n  categories$;\r\n  id: string;\r\n  addonSubscription: Subscription; \r\n  subscription: Subscription;\r\n  flavorSubscription: Subscription;\r\n  toppings = new FormControl();\r\n  flavors = new FormControl();\r\n  toppingList;\r\n  addons: [string];\r\n  flavorsList;\r\n  flavorsItem: [string]\r\n\r\n  product: Product = {\r\n    name: '',\r\n    price: 0,\r\n    category: '',\r\n    picture: '',\r\n    updated: '',\r\n    quantity: 0,\r\n    addons: [''],\r\n    instruction: ''\r\n    \r\n  }\r\n\r\n  task: AngularFireUploadTask;\r\n  uploadState: Observable<string>;\r\n  uploadProgress: Observable<number>;\r\n  downloadURL: Observable<string>;\r\n  snapshot: Observable<any>;\r\n\r\n  constructor(\r\n    private category: CategoryService, \r\n    private activeRoute: ActivatedRoute, \r\n    private message: ToastrService, \r\n    private prodServ: ProductService,\r\n    private afStorage: AngularFireStorage, \r\n    private router: Router,\r\n    private flavorServ: FlavorsService,\r\n    private addonsServ: AddonsService\r\n    ) {\r\n\r\n    this.categories$ = this.category.getCategories();\r\n    this.id = this.activeRoute.snapshot.params['id'];\r\n    if(this.id) {\r\n     this.subscription =  this.prodServ.getProduct(this.id).subscribe(prod => this.product = prod);\r\n    \r\n    }\r\n    this.addonSubscription = this.addonsServ.getAddons().subscribe(addons => {this.toppingList = addons;\r\n      \r\n    })\r\n\r\n    this.flavorSubscription = this.flavorServ.getFlavors().subscribe(flavors => {this.flavorsList = flavors;\r\n    \r\n    });\r\n\r\n    \r\n   }\r\n\r\n\r\n  ngOnDestroy(){\r\n    this.subscription.unsubscribe();\r\n    this.addonSubscription.unsubscribe();\r\n  }\r\n\r\n  onUpload(event) {\r\n    \r\n    const id = Math.random().toString(36).substring(2);\r\n    let file = <File>event.target.files[0];\r\n    let imagSize = file.size;\r\n    let fileType = file.type;\r\n    let name = file.name;\r\n    let ext = fileType.split('/', 1);\r\n\r\n    if (imagSize > 3000000) {\r\n\r\n      this.message.error('File is too large', 'Error Uploading');\r\n      return;\r\n\r\n    } \r\n\r\n    if (ext[0] !== 'image') {\r\n      this.message.error('Invalid File', 'Error Uploading');\r\n      return;\r\n    } \r\n\r\n    // let reference = this.afStorage.ref('img/' + id + '-' + name);\r\n    let reference = this.afStorage.ref('img/' + id + '-' + name);\r\n    this.task = reference.put(file);\r\n    this.uploadProgress = this.task.percentageChanges();\r\n    this.task.then( snap => snap.ref.getDownloadURL().then(urlPic => {this.downloadURL = urlPic; this.product.picture = urlPic}));\r\n    this.message.success('Image succesfully uploaded', 'Great');\r\n   \r\n  }\r\n\r\n  onSubmit({value, valid}: { value: Product, valid: boolean}) {\r\n    \r\n    if (!valid) {\r\n      // add error\r\n      console.log('error');\r\n      console.log(this.product);\r\n      return;\r\n  \r\n    } else {\r\n      // Update product\r\n      this.product.updated = new Date().toLocaleString();\r\n      this.product.addons = this.addons || this.product.addons || [];\r\n      this.product.flavors = this.flavorsItem || this.product.flavors || [];\r\n      this.prodServ.updateProduct(this.product).then(() => this.message.success('Product Updated', 'Success!'))\r\n      .catch(err => {this.message.error('Something went wrong', 'Error!');\r\n      console.log(err);\r\n    });\r\n      this.router.navigate(['admin/products']);\r\n     \r\n    }\r\n  }\r\n\r\n  delete() {\r\n    if (confirm('Are you sure you want to delete this procuct?')) {\r\n      this.prodServ.deleteProduct(this.id);\r\n      this.message.info('Product has been deleted', 'Deleted!');\r\n      this.router.navigate(['/admin/products']);\r\n    } else {\r\n    this.message.info('No changes were made', 'Canceled');\r\n    return;\r\n    }\r\n  \r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"addons\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div>\\r\\n          <h3 class=\\\"text-center\\\">Adding New Addon</h3>\\r\\n            <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"addAddon(myForm)\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"addon\\\">Addon Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"addon.name\\\" name=\\\"addon\\\" id=\\\"addon\\\">\\r\\n                <br>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-dark\\\" [disabled]=\\\"!myForm.form.valid\\\">Save Addon</button>\\r\\n              </div>\\r\\n            </form>\\r\\n          </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <h3>Addons Already Included</h3>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n          <a class=\\\"btn btn-dark float-right\\\" routerLink=\\\"/admin/products\\\">Manage Products</a>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <ul class=\\\"list-group\\\">\\r\\n            <li *ngFor=\\\"let addon of addons; let i = index\\\" class=\\\"list-group-item text-capitalize\\\">{{ addon.name }} <span><button (click)=\\\"deleteAddon(addon.id)\\\" class=\\\"btn btn-danger float-right\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i> Remove</button></span></li>\\r\\n          </ul>\\r\\n    </div>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n     \\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n</div>\\r\\n\\r\\n\"","import { Addons } from './../../models/addons';\r\nimport { AddonsService } from './../../services/addons.service';\r\nimport { Component, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-manage-addons',\r\n  templateUrl: './manage-addons.component.html',\r\n  styleUrls: ['./manage-addons.component.css']\r\n})\r\nexport class ManageAddonsComponent implements OnDestroy {\r\n\r\n  addonSubscription: Subscription;\r\n  addons: Addons[];\r\n  addon: Addons = {\r\n    name: ''\r\n  }\r\n\r\n  constructor(private addonsServ: AddonsService) { \r\n    \r\n    this.addonSubscription = this.addonsServ.getAddons().subscribe(addons => {this.addons = addons;\r\n    \r\n  });\r\n\r\n\r\n}\r\n\r\n  ngOnDestroy() {\r\n    this.addonSubscription.unsubscribe();\r\n  }\r\n\r\n  deleteAddon(id: string) {\r\n    \r\n     this.addonsServ.deleteAddon(id).then(() => console.log('Addon deleted'));\r\n   \r\n  }\r\n\r\n  addAddon() {\r\n    this.addonsServ.addAddon(this.addon).then(()=> console.log('Addon Added'));\r\n    this.addon.name = '';\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    <h3 class=\\\"card-title\\\">Adding Categories</h3>\\r\\n  </div>\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <form #categoryForm=\\\"ngForm\\\" (ngSubmit)=\\\"addCategory()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"name\\\">Category Name</label>\\r\\n          <input #catName required name=\\\"name\\\" [(ngModel)]=\\\"category.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"id\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <button class=\\\"btn btn-dark\\\" [disabled]=\\\"!categoryForm.form.valid\\\" type=\\\"submit\\\">Add Category</button>\\r\\n        </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<div *ngIf=\\\"categories$\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <h3 class=\\\"text-center\\\">Categories List</h3>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <ul class=\\\"list-group\\\" *ngFor=\\\"let  category of categories$ | async \\\">\\r\\n        <li (click)=\\\"fillName($event)\\\" class=\\\"list-group-item text-capitalize\\\">{{ category.name }} <span><button (click)=\\\"deleteCategory(category.id)\\\" class=\\\"btn btn-danger float-right\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i> Remove</button></span>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { CategoryService } from '../../services/category.service';\r\nimport { Category } from '../../models/category';\r\n\r\n@Component({\r\n  selector: 'app-manage-category',\r\n  templateUrl: './manage-category.component.html',\r\n  styleUrls: ['./manage-category.component.css']\r\n})\r\nexport class ManageCategoryComponent implements OnInit {\r\n\r\n  categories$;\r\n  category: Category = {\r\n    name: ''\r\n  };\r\n\r\n  constructor(private categoryServ: CategoryService) {\r\n\r\n    this.categories$ = this.categoryServ.getCategories();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addCategory() {\r\n    this.categoryServ.addCategory(this.category).then(() => console.log(this.category));\r\n    this.category.id = '';\r\n    this.category.name = '';\r\n  }\r\n\r\n  deleteCategory(id: string) {\r\n    if(!confirm('Do you want to delete it?')) return;\r\n    this.categoryServ.deleteCategory(id).then(() => console.log('Category Deleted'))\r\n  }\r\n\r\n  fillName(e: any) {\r\n    console.log(e.target.innerText);\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <h3 class=\\\"card-title\\\">Adding Flavor</h3>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form #flavorForm=\\\"ngForm\\\" (ngSubmit)=\\\"addFlavor()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"name\\\">Flavor's Name</label>\\r\\n            <input #catName required name=\\\"name\\\" [(ngModel)]=\\\"flavor.name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"id\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <button class=\\\"btn btn-dark\\\" [disabled]=\\\"!flavorForm.form.valid\\\" type=\\\"submit\\\">Add Flavor</button>\\r\\n          </div>\\r\\n  \\r\\n      </form>\\r\\n    </div>\\r\\n  \\r\\n  </div>\\r\\n  <div *ngIf=\\\"flavors$\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <h3 class=\\\"text-center\\\">Flavors List</h3>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <ul class=\\\"list-group\\\" *ngFor=\\\"let  flavor of flavors$ | async \\\">\\r\\n          <li class=\\\"list-group-item text-capitalize\\\">{{ flavor.name }} <span><button (click)=\\\"deleteFlavor(flavor.id)\\\" class=\\\"btn btn-danger float-right\\\"><i class=\\\"fa fa-trash\\\" aria-hidden=\\\"true\\\"></i> Remove</button></span>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { Flavors } from './../../models/flavors';\r\nimport { FlavorsService } from './../../services/flavors.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-manage-flavor',\r\n  templateUrl: './manage-flavor.component.html',\r\n  styleUrls: ['./manage-flavor.component.css']\r\n})\r\nexport class ManageFlavorComponent implements OnInit {\r\n\r\n\r\n  flavors$;\r\n  flavor: Flavors = {\r\n    name: ''\r\n  }\r\n\r\n  constructor(private flavorServ: FlavorsService) {\r\n\r\n    this.flavors$ = this.flavorServ.getFlavors();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\naddFlavor() {\r\n this.flavorServ.addFlavor(this.flavor).then(() => console.log(this.flavor));\r\n this.flavor.name = '';\r\n}\r\n\r\ndeleteFlavor(id: string) {\r\n if(!confirm('Do you want to delete it?')) return;\r\n this.flavorServ.deleteFlavor(id).then(() => console.log('Flavor Deleted'))\r\n}\r\n\r\n}\r\n","module.exports = \".nav-tabs .nav-link.active {\\r\\n    background-color: #96194b;\\r\\n    color: beige;\\r\\n}\"","module.exports = \"<div style=\\\"display: none\\\">\\r\\n    Audio\\r\\n    <audio #audioFile>\\r\\n      <source src=\\\"../../../assets/audio/neworder.wav\\\" type=\\\"audio/wav\\\">\\r\\n    </audio>\\r\\n  </div>\\r\\n<div *ngIf=\\\"orders$ | async as order\\\">\\r\\n \\r\\n  <ul class=\\\"nav nav-tabs\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" [class.active]=\\\"!status\\\" routerLink=\\\"/admin/orders/\\\">All Orders</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" [class.active]=\\\"status === 'new'\\\" routerLink=\\\"/admin/orders/\\\" [queryParams]=\\\"{ status: 'new' }\\\">New</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" [class.active]=\\\"status === 'delivered'\\\" routerLink=\\\"/admin/orders/\\\" [queryParams]=\\\"{ status: 'delivered' }\\\">Delivered</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" [class.active]=\\\"status === 'almost-ready'\\\" routerLink=\\\"/admin/orders/\\\" [queryParams]=\\\"{ status: 'almost-ready' }\\\">In Progress</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" [class.active]=\\\"status === 'delayed'\\\" routerLink=\\\"/admin/orders/\\\" [queryParams]=\\\"{ status: 'delayed' }\\\">Delayed</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" [class.active]=\\\"status === 'canceled'\\\" routerLink=\\\"/admin/orders/\\\" [queryParams]=\\\"{ status: 'canceled' }\\\">Canceled</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n<div *ngIf=\\\"orders$\\\">\\r\\n    <h2 class=\\\"text-center mb-3 text-capitalize\\\"> {{ status }}</h2>\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n            <th>Name</th>\\r\\n            <th>Date/Time</th>\\r\\n            <th>Amount</th>\\r\\n            <th>Status</th>\\r\\n            <th>Details</th>\\r\\n        </tr>\\r\\n        \\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of filteredStatus\\\">\\r\\n          <td class=\\\"text-capitalize\\\">{{ item.shipping.name }} {{ item.shipping.last_name }}</td>\\r\\n          <td>{{ item.datePlaced }}</td>\\r\\n          <td>{{ item.grandTotal | currency:'USD': 'symbol-narrow' }}</td>\\r\\n          <td [ngClass]=\\\"{'bg-success': item.status === 'delivered', 'bg-danger': item.status === 'canceled', 'bg-secondary': item.status === 'almost-ready', 'bg-info': item.status === 'new', 'bg-warning': item.status === 'in-progress'}\\\" \\r\\n              class=\\\"text-capitalize font-weight-bold text-center\\\">{{ item.status }} </td>\\r\\n          <td><a [routerLink]=\\\"['/admin/orders/details', item.id]\\\" class=\\\"btn btn-secondary\\\">View Order</a>\\r\\n          </td>\\r\\n        \\r\\n       \\r\\n        </tr>\\r\\n       \\r\\n  \\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n  \\r\\n      </tfoot>\\r\\n  \\r\\n    </table>\\r\\n  \\r\\n  </div>\\r\\n  \"","import { Subscription } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Order } from './../../models/order';\r\nimport { OrderService } from './../../services/order.service';\r\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n\r\n  @ViewChild('audioFile') audioFile: ElementRef;\r\n\r\n  orders$;\r\n  orders: Order[] = [];\r\n  status: string = 'All Orders';\r\n  filteredStatus: Order[] = [];\r\n  subscription: Subscription;\r\n  checkNewOrder: boolean;\r\n  count: number = 0;\r\n\r\n  constructor(private orderServ: OrderService, private activeRoute: ActivatedRoute, private msg: ToastrService) { \r\n    \r\n  }\r\n\r\n async ngOnInit() {\r\n  this.orders$ = (await this.orderServ.getAllOrders());\r\n  this.populateOrders();\r\n\r\n  }\r\n\r\n  private populateOrders() { \r\n\r\n  \r\n   \r\n    this.subscription = this.orderServ.getAllOrders().subscribe(orders => {\r\n\r\n      this.orders = orders;\r\n      this.activeRoute.queryParamMap.subscribe(params => {\r\n        this.status = params.get('status');\r\n        this.filteredStatus = (this.status) ?\r\n          this.orders.filter(p => p.status === this.status) :\r\n          this.orders;\r\n      })\r\n      this.count = 0;\r\n      orders.filter(order => {\r\n\r\n        if (order.status === 'new') {\r\n          this.count += 1;\r\n\r\n        }\r\n\r\n      }\r\n\r\n      );\r\n\r\n      if (this.count > 0) {\r\n        this.msg.show('You have ' + this.count + ' new orders', 'NEW ORDER');\r\n        (<HTMLAudioElement>this.audioFile.nativeElement).play();\r\n    \r\n        setTimeout(() => (<HTMLAudioElement>this.audioFile.nativeElement).play(), 2100);\r\n       \r\n\r\n        if (this.count < 1) {\r\n          this.msg.show('There is no New Orders', 'NO ORDERS');\r\n        }\r\n\r\n      }\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","module.exports = \".inline {\\r\\n    display: inline;\\r\\n}\\r\\n\\r\\n.example-radio-group {\\r\\n    display: inline-flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n\\r\\n.example-radio-button {\\r\\n    margin: 5px;\\r\\n  }\\r\\n\\r\\n.example-selected-value {\\r\\n    margin: 15px 0;\\r\\n  }\"","module.exports = \"<div *ngIf=\\\"product\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <h3 class=\\\"text-center\\\">Adding New Product</h3>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <a routerLink=\\\"/admin/addons\\\" class=\\\"btn btn-dark float-right\\\">Manage Addons</a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div [ngClass]=\\\"{'col-md-7': product.name, 'col-md-12': !product.name}\\\">\\r\\n      <form #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(myForm)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"item_name\\\" class=\\\"font-weight-bold\\\">Product Name</label>\\r\\n          <input [(ngModel)]=\\\"product.name\\\" id=\\\"item_name\\\" type=\\\"text\\\" #prod_name=\\\"ngModel\\\" name=\\\"name\\\" class=\\\"form-control\\\"\\r\\n            [ngClass]=\\\"{'is-invalid': prod_name.touched && prod_name.errors, 'is-valid': prod_name.valid}\\\" required>\\r\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"prod_name.errors?.required\\\">\\r\\n            Name is required..\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"item_price\\\">Price</label>\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">$</span>\\r\\n            <input [(ngModel)]=\\\"product.price\\\" id=\\\"item_price\\\" type=\\\"number\\\" #prod_price=\\\"ngModel\\\" name=\\\"price\\\" [min]=\\\"0\\\"\\r\\n              class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': prod_price.touched && prod_name.errors, 'is-valid': prod_price.valid}\\\"\\r\\n              required>\\r\\n          </div>\\r\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"prod_price.errors?.min\\\">\\r\\n            Price should be 0 or higher\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"item_category\\\">Category</label>\\r\\n          <select [(ngModel)]=\\\"product.category\\\" class=\\\"form-control\\\" #prod_category=\\\"ngModel\\\" name=\\\"category\\\" id=\\\"item_category\\\"\\r\\n            [ngClass]=\\\"{'is-invalid': prod_category.touched && prod_category.errors, 'is-valid': prod_category.valid}\\\"\\r\\n            required>\\r\\n            <option disabled value=\\\"\\\">Select a category</option>\\r\\n            <option class=\\\"text-capitalize\\\" *ngFor=\\\"let c of categories$ | async\\\" [value]=\\\"c.id\\\">{{ c.name }}</option>\\r\\n          </select>\\r\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"prod_category.errors?.required\\\">\\r\\n            Category is required\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"flavorsList\\\" class=\\\"form-group\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-select name=\\\"flavors\\\" [(ngModel)]=\\\"flavorsItem\\\" placeholder=\\\"Flavor\\\" [formControl]=\\\"flavors\\\" multiple>\\r\\n                  <mat-option class=\\\"text-capitalize\\\" *ngFor=\\\"let flavor of flavorsList;\\\" [value]=\\\"flavor.name\\\">{{\\r\\n                    flavor.name }}</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n           \\r\\n        </div>\\r\\n          <div *ngIf=\\\"toppingList\\\" class=\\\"form-group\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-select name=\\\"addons\\\" [(ngModel)]=\\\"addons\\\" placeholder=\\\"Addons\\\" [formControl]=\\\"toppings\\\" multiple>\\r\\n                <mat-option class=\\\"text-capitalize\\\" *ngFor=\\\"let topping of toppingList;\\\" [value]=\\\"topping.name\\\">{{\\r\\n                  topping.name }}</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"pic\\\">Upload Image</label>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-info btn-block\\\" (click)=\\\"item_pic.click()\\\">Select Image</button>\\r\\n        </div>\\r\\n        <div hidden class=\\\"form-control col\\\">\\r\\n          <input required class=\\\"form-control\\\" type=\\\"file\\\" (change)=\\\"onUpload($event)\\\" name=\\\"pic\\\" id=\\\"pic\\\" accept=\\\".png,.jpg, .jpeg\\\"\\r\\n            ngModel #item_pic>\\r\\n        </div>\\r\\n        <br>\\r\\n        <div>\\r\\n          <button [disabled]=\\\"!myForm.form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-dark btn-block\\\">Add Product</button>\\r\\n        </div>\\r\\n\\r\\n      </form>\\r\\n\\r\\n    </div>\\r\\n    <br>\\r\\n    <div *ngIf=\\\"product.name\\\" [ngClass]=\\\"{'col-md-5': product.name}\\\">\\r\\n      <div class=\\\"card\\\">\\r\\n        <img class=\\\"card-img-top\\\" [src]=\\\"product.picture\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title text-capitalize\\\">{{ product.name}}</h5>\\r\\n          <p class=\\\"card-text\\\">{{ product.price | currency:\\\"USD\\\":\\\"symbol-narrow\\\" }} </p>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Flavors } from './../../models/flavors';\r\nimport { FlavorsService } from './../../services/flavors.service';\r\nimport { MatCheckboxChange, MatSelectChange } from '@angular/material';\r\nimport { Addons } from './../../models/addons';\r\n\r\nimport { Product } from './../../models/product';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Component, OnInit, ElementRef, OnDestroy } from '@angular/core';\r\nimport { CategoryService } from '../../services/category.service';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFireUploadTask, AngularFireStorage } from 'angularfire2/storage';\r\nimport { ProductService } from '../../services/product.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { AddonsService } from '../../services/addons.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-form',\r\n  templateUrl: './product-form.component.html',\r\n  styleUrls: ['./product-form.component.css']\r\n})\r\nexport class ProductFormComponent implements OnInit, OnDestroy {\r\n\r\n  categories$;\r\n  subscription: Subscription;\r\n  flavorSubscription: Subscription;\r\n  toppings = new FormControl();\r\n  flavors = new FormControl();\r\n  toppingList;\r\n  addons: [string];\r\n  flavorsList;\r\n  flavorsItem: [string]\r\n \r\n  product: Product = {\r\n    name: '',\r\n    price: 0,\r\n    category: '',\r\n    picture: '',\r\n    updated: '',\r\n    quantity: 0,\r\n    addons: [''],\r\n    flavors: ['']\r\n    \r\n    \r\n  }\r\n\r\n  task: AngularFireUploadTask;\r\n  uploadState: Observable<string>;\r\n  uploadProgress: Observable<number>;\r\n  downloadURL: Observable<string>;\r\n  snapshot: Observable<any>;\r\n  \r\n\r\n  constructor(\r\n    private catServ: CategoryService, \r\n    private afStorage: AngularFireStorage, \r\n    private message: ToastrService, \r\n    private addonsServ: AddonsService,\r\n    private prodServ: ProductService,\r\n    private flavorServ: FlavorsService,\r\n    private router: Router) {\r\n  \r\n    this.categories$= this.catServ.getCategories();\r\n  }\r\n\r\nngOnInit() {\r\n   this.subscription = this.addonsServ.getAddons().subscribe(addons => {this.toppingList = addons;\r\n    \r\n    })\r\n  this.flavorSubscription = this.flavorServ.getFlavors().subscribe(flavors => {this.flavorsList = flavors;\r\n    console.log(this.flavorsList);\r\n  });\r\n  }\r\n\r\n  onUpload(event) {\r\n    \r\n    const id = Math.random().toString(36).substring(2);\r\n    let file = <File>event.target.files[0];\r\n    let imagSize = file.size;\r\n    let fileType = file.type;\r\n    let name = file.name;\r\n    let ext = fileType.split('/', 1);\r\n\r\n    if (imagSize > 10000000) {\r\n\r\n      this.message.error('File is too large', 'Error Uploading');\r\n      return;\r\n\r\n    } \r\n\r\n    if (ext[0] !== 'image') {\r\n      this.message.error('Invalid File', 'Error Uploading');\r\n      return;\r\n    } \r\n\r\n    // let reference = this.afStorage.ref('img/' + id + '-' + name);\r\n    let reference = this.afStorage.ref('img/' + id + '-' + name);\r\n    this.task = reference.put(file);\r\n    this.uploadProgress = this.task.percentageChanges();\r\n    this.task.then( snap => snap.ref.getDownloadURL().then(urlPic => {this.downloadURL = urlPic; this.product.picture = urlPic}));\r\n    this.message.success('Image succesfully uploaded', 'Great');\r\n   \r\n  }\r\n\r\n  onSubmit({value, valid}: { value: Product, valid: boolean}) {\r\n    \r\n    if (!valid) {\r\n      // add error\r\n      console.log('error');\r\n      console.log(this.product);\r\n    \r\n      return;\r\n  \r\n  \r\n    } else {\r\n    \r\n      // add product\r\n      this.product.updated = new Date().toLocaleString();\r\n      this.product.addons = this.addons || [];\r\n      this.product.flavors = this.flavorsItem || [];\r\n      this.prodServ.saveProduct(this.product).then(() => this.message.success('New Product Added', 'Success!'))\r\n      .catch(err => {this.message.error('Something went wrong', 'Error!');\r\n      console.log(err);\r\n    });\r\n      this.router.navigate(['admin/products']);\r\n      this.message.success('Product Added...', 'Added!' );\r\n  \r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.flavorSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<br>\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n<!-- <app-footer></app-footer>  -->\"","import { Component } from '@angular/core';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent  {\r\n\r\n\r\n}\r\n\r\n\r\n","import { AdminAuthGuard } from './guards/admin-auth.guard';\r\nimport { AddonsService } from './services/addons.service';\r\n\r\nimport { AdminOrderService } from './services/admin-order-service.service';\r\nimport { ProductFilterComponent } from './components/product-filter/product-filter.component';\r\nimport { ProductService } from './services/product.service';\r\nimport { CategoryService } from './services/category.service';\r\nimport { AuthGuard } from './guards/auth-guard.service';\r\nimport { LoginsService } from './services/logins/logins.service';\r\nimport { UsersService } from './services/users/users.service';\r\n\r\nimport { environment } from './../environments/environment';\r\nimport { AppRoutesModule } from './routing/app-routes/app-routes.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\n\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { ShoppingCartComponent } from './components/shopping-cart/shopping-cart.component';\r\nimport { CheckOutComponent } from './components/check-out/check-out.component';\r\nimport { OrderSuccessComponent } from './components/order-success/order-success.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProductsComponent } from './components/products/products.component';\r\nimport { AdminProductsComponent } from './admin/admin-products/admin-products.component';\r\nimport { OrdersComponent } from './admin/orders/orders.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MyordersComponent } from './components/myorders/myorders.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NotfoundComponent } from './components/notfound/notfound.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { ProductFormComponent } from './admin/product-form/product-form.component';\r\nimport { CustomFormsModule } from 'ng2-validation'\r\nimport { AngularFireStorageModule } from 'angularfire2/storage';\r\nimport { EditComponent } from './admin/edit/edit.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { DataTableComponent } from './data-table/data-table.component';\r\nimport { MatTableModule, MatPaginatorModule, MatSortModule, MatCheckboxModule, MatSelectModule, MatRadioModule, MatIconModule, MatBadgeModule, MatCardModule, MatListModule, MatButtonModule, MatFormFieldModule, MatInputModule, MatSidenavModule } from '@angular/material';\r\nimport { ShoppingCartService } from './services/shopping-cart.service';\r\nimport { ProductCardComponent } from './components/product-card/product-card.component';\r\nimport { ProductQuantityComponent } from './components/product-quantity/product-quantity.component';\r\nimport { OrderService } from './services/order.service';\r\nimport { ShoppingCartSummaryComponent } from './components/shopping-cart-summary/shopping-cart-summary.component';\r\nimport { ShippingFormComponent } from './components/shipping-form/shipping-form.component';\r\nimport { OrderDetailsComponent } from './components/orders/order-details/order-details.component';\r\nimport { AdminOrderDetailsComponent } from './admin/admin-order-details/admin-order-details.component';\r\nimport { DeliveryConfirmationComponent } from './components/delivery-confirmation/delivery-confirmation.component';\r\nimport { OrderReviewComponent } from './components/shopping-cart-summary/order-review/order-review.component';\r\nimport { ManageAddonsComponent } from './admin/manage-addons/manage-addons.component';\r\nimport { ManageCategoryComponent } from './admin/manage-category/manage-category.component';\r\nimport { MyprofileComponent } from './components/myprofile/myprofile.component';\r\nimport { ManageFlavorComponent } from './admin/manage-flavor/manage-flavor.component';\r\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NavbarComponent,\r\n    ShoppingCartComponent,\r\n    CheckOutComponent,\r\n    OrderSuccessComponent,\r\n    LoginComponent,\r\n    ProductsComponent,\r\n    AdminProductsComponent,\r\n    OrdersComponent,\r\n    MyordersComponent,\r\n    NotfoundComponent,\r\n    RegisterComponent,\r\n    ProductFormComponent,\r\n    EditComponent,\r\n    FooterComponent,\r\n    DataTableComponent,\r\n    ProductFilterComponent,\r\n    ProductCardComponent,\r\n    ProductQuantityComponent,\r\n    ShoppingCartSummaryComponent,\r\n    ShippingFormComponent,\r\n    OrderDetailsComponent,\r\n    AdminOrderDetailsComponent,\r\n    DeliveryConfirmationComponent,\r\n    OrderReviewComponent,\r\n    ManageAddonsComponent,\r\n    ManageCategoryComponent,\r\n    MyprofileComponent,\r\n    ManageFlavorComponent\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutesModule,\r\n    FormsModule,\r\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\r\n    CustomFormsModule,\r\n    NgbModule.forRoot(),\r\n    AngularFireModule.initializeApp(environment.firebase, 'antojitos-chef'),\r\n    AngularFirestoreModule,\r\n    AngularFireStorageModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatSidenavModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatFormFieldModule,\r\n    MatBadgeModule,\r\n    AngularFireDatabaseModule,\r\n    BrowserAnimationsModule, // required animations module\r\n    ToastrModule.forRoot(), // ToastrModule added\r\n    AngularFireAuthModule, MatTableModule, MatPaginatorModule, MatSortModule\r\n\r\n\r\n  ],\r\n  providers: [{provide: LocationStrategy , useClass: HashLocationStrategy},LoginsService, UsersService, AuthGuard, AdminAuthGuard, ProductService, CategoryService, ShoppingCartService, OrderService, AdminOrderService, AddonsService ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { \r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"cart$ | async as cart\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <div>\\r\\n      <h2 class=\\\"text-center mb-2\\\">Shipping or Delivery Information</h2>\\r\\n      <shipping-form [cart]=\\\"cart\\\" *ngIf=\\\"!reviewOrder\\\"></shipping-form>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col\\\">\\r\\n    <shopping-cart-summary [cart]=\\\"cart\\\" *ngIf=\\\"!reviewOrder\\\"></shopping-cart-summary>\\r\\n\\r\\n  </div>\\r\\n  <div>\\r\\n    <order-review [cart]=\\\"cart\\\" *ngIf=\\\"reviewOrder\\\"></order-review>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { ShoppingCart } from './../../models/shoppingCart';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ShoppingCartService } from '../../services/shopping-cart.service';\r\nimport {  Observable } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-check-out',\r\n  templateUrl: './check-out.component.html',\r\n  styleUrls: ['./check-out.component.css']\r\n})\r\nexport class CheckOutComponent implements OnInit {\r\n\r\n  \r\n  cart$: Observable<ShoppingCart>;\r\n \r\n \r\n  constructor( private shoppingCartServ: ShoppingCartService) { }\r\n\r\n  async ngOnInit() {\r\n   \r\n    this.cart$ = (await this.shoppingCartServ.getCart());\r\n    \r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\r\\n\\r\\n/* font-family: 'Lobster', cursive;\\r\\nfont-family: 'Yanone Kaffeesatz', sans-serif;\\r\\nfont-family: 'Srisakdi', cursive;\\r\\nfont-family: 'Cairo', sans-serif;\\r\\nfont-family: 'Maven Pro', sans-serif;\\r\\nfont-family: 'Orbitron', sans-serif;\\r\\nfont-family: 'Cookie', cursive; */\\r\\n\\r\\n.card-footer p {\\r\\n    font-family: 'Cairo', sans-serif;\\r\\n}\\r\\n\\r\\n.thank {\\r\\n    font-family: 'Orbitron', sans-serif;\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n.logo {\\r\\n    font-family: 'Srisakdi', cursive;\\r\\n    font-size: 1.1rem;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"order\\\">\\r\\n  <div class=\\\"card\\\" #pdfcontent>\\r\\n    <div class=\\\"card-header\\\">\\r\\n      <h2 class= \\\"mb-4\\\">Order Delivery Report</h2>\\r\\n      <p class=\\\"font-weight-bold\\\">Order Placed On: {{ order.datePlaced }}</p>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <h3 class=\\\"text-capitalize\\\"> Customer: {{ order.shipping.name }} {{ order.shipping.last_name}}</h3>\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>Items</th>\\r\\n              <th>Quantity</th>\\r\\n              <th>Price</th>\\r\\n              <th>Total</th>\\r\\n            </tr>\\r\\n            \\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of order.items\\\">\\r\\n              <td class=\\\"text-capitalize\\\"><p class=\\\"font-weight-bold\\\">{{ item.product.name}}</p> <p><i>{{ item.product.flavors }}</i></p></td>\\r\\n              <td>{{ item.quantity }} </td>\\r\\n              <td>{{ item.product.price | currency:'USD': 'symbol-narrow' }}</td>\\r\\n              <td>{{ item.totalPrice | currency:'USD': 'symbol-narrow' }}</td> \\r\\n            </tr>\\r\\n            <tr>\\r\\n              <th></th>\\r\\n              <th></th>\\r\\n              <th>Grand Total</th>\\r\\n              <th>{{ order.grandTotal }}</th>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <!-- <th *ngIf=\\\"order.items.product.instruction\\\"><b>Special Instruction:</b>  {{ order.items.product.instruction }}</th> -->\\r\\n            </tr>\\r\\n            <tr><th colspan=\\\"4\\\" class=\\\"text-center alert alert-dark\\\">Delivery Information</th></tr>\\r\\n\\r\\n          </tbody>\\r\\n          <tfoot>\\r\\n            <tr>\\r\\n              <td class=\\\"text-capitalize\\\" colspan=\\\"2\\\"><b>Delivery Address: </b> {{ order.shipping.address }} </td>\\r\\n              <td *ngIf=\\\"order.shipping.apt\\\"><b>Apt: </b> {{ order.shipping.apt }}</td>\\r\\n              <td><b>City: </b> {{ order.shipping.city }}</td>\\r\\n              \\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td colspan=\\\"4\\\"><b>Phone: </b>{{ order.shipping.phone }}</td>\\r\\n              \\r\\n            </tr>\\r\\n            <tr>\\r\\n              <td colspan=\\\"4\\\"><p *ngIf=\\\"order.shipping.message\\\"><b>Delivery Instruction:</b>  {{ order.shipping.message }}</p></td>\\r\\n            </tr>\\r\\n          </tfoot>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-footer\\\">\\r\\n    <p class=\\\"thank font-italic mb-5\\\">Thanks <span class=\\\"text-capitalize\\\">{{ order.shipping.name}}</span> for your business.</p>\\r\\n    <p class=\\\"logo text-center blockquote-footer\\\"> Somos Antojitos Chef, <span class=\\\"font-italic\\\">Donde tu antojito es un arte.</span> </p>\\r\\n    <img class=\\\"img float-right\\\" width=\\\"60\\\" height=\\\"60\\\" src=\\\"../../../assets/footer_logo.png\\\" alt=\\\"logo\\\">\\r\\n    <div>\\r\\n     \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Order } from './../../models/order';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { AdminOrderService } from '../../services/admin-order-service.service';\r\n\r\n@Component({\r\n  selector: 'delivery-confirmation',\r\n  templateUrl: './delivery-confirmation.component.html',\r\n  styleUrls: ['./delivery-confirmation.component.css']\r\n})\r\nexport class DeliveryConfirmationComponent implements OnInit, OnDestroy {\r\n\r\n  order: Order;\r\n  subscription: Subscription;\r\n\r\n  constructor(private route: ActivatedRoute, private adminOrders: AdminOrderService) { }\r\n\r\n  async ngOnInit() {\r\n    let id = await this.route.snapshot.params['id'];\r\n    this.subscription = this.adminOrders.getOrder(id).subscribe(order => { this.order = order; console.log(this.order);\r\n     })\r\n     \r\n    }\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  \r\n\r\n}\r\n","module.exports = \".footer-distributed{\\r\\n\\tbackground-color: #292c2f;\\r\\n\\tbox-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.12);\\r\\n\\tbox-sizing: border-box;\\r\\n\\twidth: 100%;\\r\\n\\theight: auto;\\r\\n\\ttext-align: left;\\r\\n\\tposition: relative;\\r\\n    font: bold 16px sans-serif;\\r\\n    \\r\\n\\tpadding: 55px 50px;\\r\\n    margin-top: 30px;\\r\\n    }\\r\\n\\r\\n.footer-distributed .footer-left,\\r\\n.footer-distributed .footer-center,\\r\\n.footer-distributed .footer-right{\\r\\n\\tdisplay: inline-block;\\r\\n\\tvertical-align: top;\\r\\n}\\r\\n\\r\\n/* Footer left */\\r\\n\\r\\n.footer-distributed .footer-left{\\r\\n\\twidth: 40%;\\r\\n}\\r\\n\\r\\n.footer-company-about {\\r\\n\\tfont-family: 'Srisakdi', cursive;\\r\\n    font-size: 18px;\\r\\n}\\r\\n\\r\\n/* The company logo */\\r\\n\\r\\n.footer-distributed h3{\\r\\n\\tcolor:  #ffffff;\\r\\n\\tfont: normal 26px 'Cookie', cursive;\\r\\n\\tmargin: 0;\\r\\n}\\r\\n\\r\\n.footer-distributed h3 span{\\r\\n\\tcolor:  #5383d3;\\r\\n}\\r\\n\\r\\n/* Footer links */\\r\\n\\r\\n.footer-distributed .footer-links{\\r\\n\\tcolor:  #ffffff;\\r\\n\\tmargin: 20px 0 12px;\\r\\n\\tpadding: 0;\\r\\n}\\r\\n\\r\\n.footer-distributed .footer-links a{\\r\\n\\tdisplay:inline-block;\\r\\n\\tline-height: 1.8;\\r\\n\\ttext-decoration: none;\\r\\n\\tcolor:  inherit;\\r\\n}\\r\\n\\r\\n.footer-distributed .footer-company-name{\\r\\n\\tcolor:  #8f9296;\\r\\n\\tfont-size: 14px;\\r\\n\\tfont-weight: normal;\\r\\n\\tmargin: 0;\\r\\n}\\r\\n\\r\\n/* Footer Center */\\r\\n\\r\\n.footer-distributed .footer-center{\\r\\n\\twidth: 35%;\\r\\n}\\r\\n\\r\\n.footer-distributed .footer-center i{\\r\\n\\tbackground-color:  #33383b;\\r\\n\\tcolor: #ffffff;\\r\\n\\tfont-size: 25px;\\r\\n\\twidth: 38px;\\r\\n\\theight: 38px;\\r\\n\\tborder-radius: 50%;\\r\\n\\ttext-align: center;\\r\\n\\tline-height: 42px;\\r\\n\\tmargin: 10px 15px;\\r\\n\\tvertical-align: middle;\\r\\n}\\r\\n\\r\\n.footer-distributed .footer-center i.fa-envelope{\\r\\n\\tfont-size: 17px;\\r\\n\\tline-height: 38px;\\r\\n}\\r\\n\\r\\n.footer-distributed .footer-center p{\\r\\n\\tdisplay: inline-block;\\r\\n\\tcolor: #ffffff;\\r\\n\\tvertical-align: middle;\\r\\n\\tmargin:0;\\r\\n}\\r\\n\\r\\n.footer-distributed .footer-center p span{\\r\\n\\tdisplay:block;\\r\\n\\tfont-weight: normal;\\r\\n\\tfont-size:14px;\\r\\n\\tline-height:2;\\r\\n}\\r\\n\\r\\n.footer-distributed .footer-center p a{\\r\\n\\tcolor:  #5383d3;\\r\\n\\ttext-decoration: none;;\\r\\n}\\r\\n\\r\\n/* Footer Right */\\r\\n\\r\\n.footer-distributed .footer-right{\\r\\n\\twidth: 20%;\\r\\n}\\r\\n\\r\\n.footer-distributed .footer-company-about{\\r\\n\\tline-height: 20px;\\r\\n\\tcolor:  #92999f;\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-weight: normal;\\r\\n\\tmargin: 0;\\r\\n}\\r\\n\\r\\n.footer-distributed .footer-company-about span{\\r\\n\\tdisplay: block;\\r\\n\\tcolor:  #ffffff;\\r\\n\\tfont-size: 14px;\\r\\n\\tfont-weight: bold;\\r\\n\\tmargin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.footer-distributed .footer-icons{\\r\\n\\tmargin-top: 25px;\\r\\n}\\r\\n\\r\\n.footer-distributed .footer-icons a{\\r\\n\\tdisplay: inline-block;\\r\\n\\twidth: 35px;\\r\\n\\theight: 35px;\\r\\n\\tcursor: pointer;\\r\\n\\tbackground-color:  #33383b;\\r\\n\\tborder-radius: 2px;\\r\\n\\r\\n\\tfont-size: 20px;\\r\\n\\tcolor: #ffffff;\\r\\n\\ttext-align: center;\\r\\n\\tline-height: 35px;\\r\\n\\r\\n\\tmargin-right: 3px;\\r\\n\\tmargin-bottom: 5px;\\r\\n}\\r\\n\\r\\n/* If you don't want the footer to be responsive, remove these media queries */\\r\\n\\r\\n@media (max-width: 880px) {\\r\\n\\r\\n\\t.footer-distributed{\\r\\n\\t\\tfont: bold 14px sans-serif;\\r\\n\\t}\\r\\n\\r\\n\\t.footer-distributed .footer-left,\\r\\n\\t.footer-distributed .footer-center,\\r\\n\\t.footer-distributed .footer-right{\\r\\n\\t\\tdisplay: block;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\tmargin-bottom: 40px;\\r\\n\\t\\ttext-align: center;\\r\\n\\t}\\r\\n\\r\\n\\t.footer-distributed .footer-center i{\\r\\n\\t\\tmargin-left: 0;\\r\\n\\t}\\r\\n\\r\\n}\\r\\n\"","module.exports = \"<!-- The content of your page would go here. -->\\r\\n\\r\\n<footer class=\\\"footer-distributed\\\">\\r\\n\\r\\n  <div class=\\\"footer-left\\\">\\r\\n\\r\\n    <h3>Company<span>logo</span></h3>\\r\\n\\r\\n    <p class=\\\"footer-company-name\\\">Antojitos Chef &copy; 2018</p>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"footer-center\\\">\\r\\n\\r\\n    <div>\\r\\n      <i class=\\\"fa fa-map-marker\\\"></i>\\r\\n      <p><span>1266 Grand Concourse</span> Bronx, NY</p>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <i class=\\\"fa fa-phone\\\"></i>\\r\\n      <p>718-588-0744</p>\\r\\n    </div>\\r\\n\\r\\n    <div>\\r\\n      <i class=\\\"fa fa-envelope\\\"></i>\\r\\n      <p><a href=\\\"mailto:antojitoschef168@gmail.com\\\">antojitoschef168@gmail.com</a></p>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"footer-right\\\">\\r\\n\\r\\n    <p class=\\\"footer-company-about\\\">\\r\\n      <span>Donde tu antojitos es un arte</span>\\r\\n      \\r\\n    </p>\\r\\n\\r\\n    <div class=\\\"footer-icons\\\">\\r\\n\\r\\n      <a href=\\\"\\\"><i class=\\\"fa fa-facebook\\\"></i></a>\\r\\n      \\r\\n      <a  href=\\\"https://www.instagram.com/antojitoschef/\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-instagram\\\"></i></a>\\r\\n      \\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"img {\\r\\n    max-width: 800px;\\r\\n    height: 500px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"content\\\">\\r\\n   \\r\\n<div class=\\\"row2\\\" *ngIf=\\\"products\\\">\\r\\n<a [routerLink]=\\\"['/']\\\" routerLinkActive=\\\"router-link-active\\\" >\\r\\n<ngb-carousel >\\r\\n        <ng-template *ngFor=\\\"let product of products\\\" ngbSlide>\\r\\n          <img [src]=\\\"product.picture\\\" alt=\\\"Random first slide\\\">\\r\\n          <div class=\\\"carousel-caption\\\">\\r\\n            <h3 style=\\\"color:black\\\" class=\\\"text-capitalize\\\">{{ product.name }}</h3>\\r\\n            <p style=\\\"color:black\\\">Price: {{ product.price | currency:'USD': 'symbol-narrow' }}</p>\\r\\n          </div>\\r\\n        </ng-template>\\r\\n        \\r\\n      </ngb-carousel>\\r\\n    </a>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"row3\\\">\\r\\n    <app-footer></app-footer>\\r\\n</div>\\r\\n</div>\\r\\n\"","import { Product } from './../../models/product';\r\nimport { Subscription } from 'rxjs';\r\nimport { ProductService } from './../../services/product.service';\r\n\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n  providers: [NgbCarouselConfig] \r\n})\r\nexport class HomeComponent implements OnInit, OnDestroy {\r\n\r\n  showFiller = false;\r\n  prodSub: Subscription;\r\n  products: Product[] = [];\r\n\r\n  constructor(private productServ: ProductService, private config: NgbCarouselConfig) {\r\n    this.config.interval = 3000;\r\n  }\r\n  \r\n\r\n\r\n  ngOnInit() {\r\n\r\n  \r\n  this.prodSub = this.productServ.getProducts().subscribe(products => {\r\n    if(products) {\r\n     this.products = products;\r\n    }\r\n     });\r\n   \r\n  }\r\n  ngOnDestroy() {\r\n    this.prodSub.unsubscribe();\r\n  }\r\n    \r\n\r\n\r\n}\r\n","module.exports = \"#error {\\r\\n    transition: ease-in-out 1s;\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  \\r\\n  <div class=\\\"col-md-6 mx-auto\\\">\\r\\n      <div id=\\\"error\\\" *ngIf=\\\"errorMsg\\\">\\r\\n          <p class=\\\"alert alert-warning\\\">{{ errorMsg }}</p>\\r\\n        </div>\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h1 class=\\\"text-center pb-4 pt-3\\\">\\r\\n          <span class=\\\"text-primary\\\"><i class=\\\"fa fa-lock\\\"></i> Sign In /</span> Login\\r\\n        </h1>\\r\\n        <form (submit)=\\\"login()\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"email\\\">Email</label>\\r\\n            <input type=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control\\\" required>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"password\\\">Password</label>\\r\\n              <input type=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" class=\\\"form-control\\\" required>\\r\\n          </div>\\r\\n          \\r\\n          <input type=\\\"submit\\\" value=\\\"Login\\\" class=\\\"btn btn-primary btn-block\\\">\\r\\n        </form>\\r\\n        <div class=\\\"mt-5\\\">\\r\\n          <p>Do not have an account? <a class=\\\"badge badge-primary\\\" routerLink=\\\"/register\\\"><h5>Sign Up!</h5></a></p>\\r\\n        </div>\\r\\n      </div>\\r\\n     \\r\\n    </div>\\r\\n   \\r\\n  </div>\\r\\n \\r\\n \\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { LoginsService } from '../../services/logins/logins.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\nerrorMsg = '';\r\nemail: string;\r\npassword: string;\r\n  constructor(private authServ: LoginsService) { }\r\n\r\n\r\n login() {\r\n   let login = this.authServ.login(this.email.toLowerCase(), this.password);\r\n   console.log(login.then(res => console.log('Res:',res)).catch((err) => {\r\n     console.log('Error:',err as string);\r\n     if(err.code === 'auth/argument-error') {\r\n    \r\n      this.errorMsg = 'Password and Email required';\r\n      this.timeOut5sec();\r\n     } else if (err.code === 'auth/wrong-password') {\r\n       this.errorMsg = 'Invalid password or email does not exist';\r\n       this.timeOut5sec();\r\n     } else if (err.code === 'auth/too-many-requests') {\r\n       this.errorMsg = 'Too many unsuccelfull tries. Please try again later.'\r\n       this.timeOut5sec();\r\n     }\r\n     else {\r\n       this.errorMsg = 'User not found.'\r\n       this.timeOut5sec();\r\n     }\r\n     \r\n    }));\r\n    \r\n    \r\n    }\r\n\r\n    timeOut5sec() {\r\n    \r\n      setTimeout(() => {this.errorMsg = '';}, 5000);\r\n  \r\n    }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"/* .data-table {\\r\\n    width: 80%;\\r\\n    margin: 20px auto;\\r\\n} */\\r\\n\\r\\ntable {\\r\\n    width: 100%;\\r\\n  }\"","module.exports = \"\\r\\n<div>\\r\\n  <h2 class=\\\"text-center mb-4 animated pulse\\\">My Orders History</h2>\\r\\n  <div class=\\\"table-responsive-md table-responsive-sm\\\">\\r\\n\\r\\n \\r\\n  <table *ngIf=\\\"orders\\\" class=\\\"table animated fadeInRight\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Name</th>\\r\\n        <th>Date/Time</th>\\r\\n        <th>Status</th>\\r\\n        <th>Amount</th>\\r\\n        <th>Details</th>\\r\\n      </tr>\\r\\n\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of orders\\\">\\r\\n        <td class=\\\"text-capitalize\\\">{{ item.shipping.name }} {{ item.shipping.last_name }}</td>\\r\\n        <td>{{ item.datePlaced }}</td>\\r\\n        <td [ngClass]=\\\"{'bg-success': item.status === 'delivered', 'bg-info': item.status === 'new', 'bg-danger': item.status === 'canceled', 'bg-warning': item.status === 'in-progress'}\\\"  class=\\\"text-capitalize\\\">{{ item.status }}</td>\\r\\n        <td>{{ item.grandTotal | currency:'USD': 'symbol-narrow' }}</td>\\r\\n        <td><a [routerLink]=\\\"['/myorders/detail/', item.items[0].product.id]\\\" class=\\\"btn btn-secondary\\\">View Order</a></td>\\r\\n       \\r\\n\\r\\n      </tr>\\r\\n\\r\\n\\r\\n    </tbody>\\r\\n    <tfoot>\\r\\n\\r\\n    </tfoot>\\r\\n\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Order } from '../../models/order';\r\nimport { OrderService } from '../../services/order.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'app-myorders',\r\n  templateUrl: './myorders.component.html',\r\n  styleUrls: ['./myorders.component.css']\r\n})\r\nexport class MyordersComponent implements OnInit, OnDestroy {\r\n\r\n  orders: Order[] = [];\r\n  subscription: Subscription;\r\n  closeResult: string;\r\n\r\n  constructor(private orderServ: OrderService, \r\n    private modalService: NgbModal) { \r\n  \r\n  \r\n  }\r\n\r\nasync ngOnInit() {\r\n\r\n   let userId = await localStorage.getItem('userId');\r\n   this.subscription = this.orderServ.getUserId(userId).subscribe(order => this.orders = order);\r\n   \r\n}\r\n\r\n  openLg(content) {\r\n    this.modalService.open(content, { size: 'lg' });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n   this.subscription.unsubscribe();\r\n  \r\n  }\r\n\r\n}\r\n","module.exports = \".example-card {\\r\\n    max-width: 400px;\\r\\n  }\\r\\n\\r\\n  .example-header-image {\\r\\n    background-size: cover;\\r\\n  }\\r\\n\\r\\n  .grid-2 {\\r\\n      display: -ms-grid;\\r\\n      display: grid;\\r\\n      -ms-grid-columns: 1fr;\\r\\n          grid-template-columns: 1fr;\\r\\n      /* grid-column-gap: 10px; */\\r\\n  }\\r\\n\\r\\n  .example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n\\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  b {\\r\\n      margin-right: 5px;\\r\\n  }\\r\\n\"","module.exports = \"<div class=\\\"grid-2\\\" *ngIf=\\\"user\\\">\\n    <audio src=\\\"\\\"></audio>\\n  <div>\\n    <mat-card class=\\\"example-card\\\">\\n        <mat-card-header>\\n          <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n          <mat-card-title class=\\\"text-capitalize\\\"><h3>{{ user.name }} {{ user.last_name }}</h3></mat-card-title>\\n          <mat-card-subtitle>Member since: {{ user.joined }}</mat-card-subtitle>\\n        </mat-card-header>\\n        <img (click)=changePicture($event) *ngIf=\\\"user.picture; else noPicture\\\" mat-card-image src=\\\"{{ user.picture }}\\\" alt=\\\"user.name\\\">\\n        <ng-template #noPicture>\\n            <img (click)=changePicture($event) mat-card-image src=\\\"http://pngimages.net/sites/default/files/user-png-image-15189.png\\\" alt=\\\"{{ user.name }}\\\">\\n        </ng-template>\\n        <mat-card-content>\\n            <mat-list role=\\\"list\\\">\\n                <mat-list-item role=\\\"listitem\\\"><b>Address:</b>  {{ user.address.address }}</mat-list-item>\\n                <mat-list-item *ngIf=\\\"user.address.apt\\\" role=\\\"listitem\\\"><b>Apt:</b>  {{ user.address.apt }}</mat-list-item>\\n                <mat-list-item role=\\\"listitem\\\"><b>City/State: </b>  {{ user.address.city }} {{ user.address.state }}</mat-list-item>\\n                <mat-list-item role=\\\"listitem\\\"><b>Phone: </b>  {{ user.phone }} </mat-list-item>\\n                <mat-list-item role=\\\"listitem\\\"><b>Email: </b>  {{ user.email }} </mat-list-item>\\n               \\n             \\n            </mat-list>\\n        </mat-card-content>\\n        <mat-card-actions>\\n        <button color=\\\"primary\\\"  (click)=\\\"openLg(content)\\\" mat-raised-button>Edit Info.</button>\\n          <!-- modal template -->\\n          <ng-template #content let-modal>\\n            <div class=\\\"modal-header animated fadeInUp\\\">\\n              <h4 class=\\\"modal-title text-capitalize\\\">Update My Profile</h4>\\n              <button #closeModal type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <form #profile=\\\"ngForm\\\"  (ngSubmit)=\\\"updateUser(profile, closeModal)\\\">\\n                  <div class=\\\"example-container\\\">\\n                      <mat-form-field>\\n                        <input name=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" matInput placeholder=\\\"Name\\\">\\n                      </mat-form-field>\\n                      <mat-form-field>\\n                          <input name=\\\"last_name\\\" [(ngModel)]=\\\"user.last_name\\\" matInput placeholder=\\\"Last Name\\\">\\n                      </mat-form-field>\\n                      <mat-form-field>\\n                          <input type=\\\"phone\\\" name=\\\"phone\\\" [(ngModel)]=\\\"user.phone\\\" matInput placeholder=\\\"Phone\\\">\\n                      </mat-form-field>\\n                      <mat-form-field>\\n                          <input name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" matInput placeholder=\\\"Email\\\">\\n                      </mat-form-field>\\n                      <mat-form-field>\\n                          <input name=\\\"address\\\" [(ngModel)]=\\\"user.address.address\\\" matInput placeholder=\\\"Address\\\">\\n                      </mat-form-field>\\n                      <mat-form-field *ngIf=\\\"user.address.apt\\\">\\n                          <input name=\\\"apt\\\" [(ngModel)]=\\\"user.address.apt\\\" matInput placeholder=\\\"Apt\\\">\\n                      </mat-form-field>\\n                      <mat-form-field>\\n                          <input name=\\\"city\\\" [(ngModel)]=\\\"user.address.city\\\" matInput placeholder=\\\"City\\\">\\n                      </mat-form-field>\\n                      <mat-form-field *ngIf=\\\"user.address.zipcode\\\">\\n                          <input name=\\\"zipcode\\\" [(ngModel)]=\\\"user.address.zipcode\\\" matInput placeholder=\\\"Zip Code\\\">\\n                      </mat-form-field>\\n                  \\n                     <button hidden #update type=\\\"submit\\\"></button>\\n                    </div>\\n              </form>\\n              \\n        \\n            </div>\\n\\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\n              <button type=\\\"button\\\" color=\\\"primary\\\" mat-raised-button (click)=\\\"update.click()\\\" > Update </button>\\n            </div>\\n          </ng-template>\\n         \\n        </mat-card-actions>\\n      </mat-card>\\n    </div>\\n    <div>\\n      <h2>Other Information</h2>\\n\\n    </div>\\n\\n</div>\\n\"","import { Subscription } from 'rxjs';\nimport { User } from './../../models/user';\nimport { UsersService } from './../../services/users/users.service';\nimport { Component, OnInit, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport {  ToastrService } from 'ngx-toastr';\n\n\n@Component({\n  selector: 'app-myprofile',\n  templateUrl: './myprofile.component.html',\n  styleUrls: ['./myprofile.component.css']\n})\nexport class MyprofileComponent implements OnInit, OnDestroy {\n\n  @ViewChild('closeModal') closeModal: ElementRef;\n\n  subscription: Subscription;\n\n  user: User;\n\n  constructor(private userServ: UsersService, private modalService: NgbModal, private msg: ToastrService) {\n\n      \n      \n\n   }\n\n  async ngOnInit() {\n\n    let id = localStorage.getItem('userId');\n      if(id)  this.subscription = await this.userServ.getUser(id).subscribe(user => this.user = user);\n  }\n\n  updateUser(e, closeModal) {\n    this.userServ.updateUser(this.user).then(() => this.msg.success('Profile Updated', 'Success'));\n    closeModal.click();\n  }\n\n  changePicture(e) {\n    console.log(e);\n  }\n\n  \n openLg(content) {\n  // await this.addToCart();\n    this.modalService.open(content, { size: 'lg' });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n\n}\n","module.exports = \".dropdown-toggle {\\n    cursor: pointer;\\n}\\n.nav-item {\\n    padding-right: 30px;\\n   \\n}\\nul>li>a {\\n    color: aliceblue;\\n    font-weight: bold;\\n}\\nul>li>a:hover {\\n    background-color: dimgray;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-expand-sm navbar-light fixed-top \\\" style=\\\"background-color: #96194b;\\\">\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\r\\n    <img style=\\\"border-radius: 100%\\\" src=\\\"../../../assets/antojo.jpg\\\" width=\\\"60\\\" height=\\\"60\\\" alt=\\\"logo\\\">\\r\\n  </a>\\r\\n  <div class=\\\"navbar-brand d-block d-sm-none\\\">\\r\\n      <a class=\\\"shoppingCart\\\" style=\\\"color:rgb(241, 233, 223); font-size: 1.5rem;\\\" class=\\\"btn btn-outline\\\" routerLink=\\\"/shopping-cart\\\">Cart  <span *ngIf=\\\"cart$ | async as cart\\\"> <mat-icon matBadge=\\\" {{ cart.totalItemsCount }}\\\" matBadgeColor=\\\"primary\\\">local_grocery_store</mat-icon></span></a>\\r\\n   </div>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item active\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/\\\"> <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n      <li *ngIf=\\\"cart$ | async as cart\\\" class=\\\"nav-item d-none d-sm-block shoppingCart\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/shopping-cart\\\"> <mat-icon matBadge=\\\" {{ cart.totalItemsCount }}\\\" matBadgeColor=\\\"primary\\\">local_grocery_store</mat-icon></a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n          <a routerLink=\\\"/home\\\" class=\\\"nav-link\\\" >Home</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"user\\\" class=\\\"nav-item\\\">\\r\\n          <a *ngIf=\\\"user.isAdmin\\\" routerLink=\\\"/admin/orders\\\" class=\\\"nav-link\\\" >Manage Orders</a>\\r\\n        </li>\\r\\n      \\r\\n      <li *ngIf=\\\"loggedIn\\\" ngbDropdown class=\\\"nav-item dropdown\\\">\\r\\n        <a ngbDropdownToggle class=\\\"nav-link dropdown-toggle text-capitalize\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n          <span *ngIf=\\\"user && loggedIn\\\">{{ user.name }} {{ user.last_name }}</span>\\r\\n          <ng-template #noUser>\\r\\n            <span>{{ guest }}</span>\\r\\n          </ng-template>\\r\\n        </a>\\r\\n        <div *ngIf=\\\"user\\\" ngbDropdownMenu class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\r\\n            <li *ngIf=\\\"loggedIn\\\" class=\\\"nav-item pull-right\\\">\\r\\n                <a routerLink=\\\"/myprofile\\\" class=\\\"nav-link\\\" >My Profile</a>\\r\\n              </li>\\r\\n             \\r\\n          <ng-container *ngIf=\\\"user.isAdmin\\\">\\r\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"admin/products\\\">Manage Products</a>\\r\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"admin/orders\\\">Manage Orders</a>\\r\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"admin/addons\\\">Manage Addons</a>\\r\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"admin/categories\\\">Manage Categories</a>\\r\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"admin/flavors\\\">Manage Flavors</a>\\r\\n          </ng-container>\\r\\n        </div>\\r\\n        \\r\\n      </li>\\r\\n      <li *ngIf=\\\"loggedIn\\\" class=\\\"nav-item\\\">\\r\\n          <a routerLinkActive=\\\"active current\\\" class=\\\"nav-link\\\" routerLink=\\\"myorders\\\">My Orders</a>\\r\\n        </li>\\r\\n      <li *ngIf=\\\"!loggedIn\\\" class=\\\"nav-item float-right\\\">\\r\\n          <a routerLinkActive=\\\"active current\\\" class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"loggedIn\\\" class=\\\"nav-item pull-right\\\">\\r\\n          <a routerLinkActive=\\\"active current\\\" class=\\\"nav-link\\\" (click)=logout()>Log Out</a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"!loggedIn\\\"  class=\\\"nav-item pull-right\\\">\\r\\n            <a routerLinkActive=\\\"active current\\\" class=\\\"nav-link\\\" routerLink=\\\"register\\\">Register</a>\\r\\n          </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\"","import { ShoppingCartItem } from './../../models/shopping-cart-item';\r\nimport { Order } from './../../models/order';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { UsersService } from './../../services/users/users.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { LoginsService } from '../../services/logins/logins.service';\r\nimport { User } from '../../models/user';\r\nimport { ShoppingCartService } from '../../services/shopping-cart.service';\r\nimport { ShoppingCart } from '../../models/shoppingCart';\r\nimport { OrderService } from '../../services/order.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  userEmail: string;\r\n  loggedIn: boolean;\r\n  user: User;\r\n  cart$: Observable<ShoppingCart>;\r\n  subscription: Subscription;\r\n  orderSubscription: Subscription;\r\n  orders: Order[] = [];\r\n  newOrder: boolean = false;\r\n  orderCount: number = 0;\r\n \r\n  \r\n\r\n  constructor(public auth: LoginsService, \r\n    private msg: ToastrService, \r\n    private route: Router,\r\n    private orderServ: OrderService,\r\n    private shoppingCartService: ShoppingCartService,\r\n    private userServ: UsersService) {\r\n\r\n    \r\n    this.subscription = this.auth.getState().subscribe(user => {\r\n      \r\n      if (user) {\r\n        this.loggedIn = true;\r\n        this.userServ.getUser(user.uid).subscribe(res => {this.user = res;\r\n          \r\n          if (this.user.isAdmin && this.orderCount > 0)  {\r\n          this.msg.info(`You have ${this.orderCount} new orders`, 'New Order');\r\n          }\r\n\r\n        });\r\n        this.userEmail = user.email;\r\n        \r\n        \r\n        \r\n      }else {\r\n        this.loggedIn = false;\r\n      }\r\n    })\r\n\r\n  }\r\n  async ngOnInit() {\r\n     \r\n    this.cart$ = (await this.shoppingCartService.getCart());\r\n    this.orderSubscription = this.orderServ.getAllOrders().subscribe(order => {this.orders = order;\r\n      let filtered =this.orders.filter(neworder => neworder.status === 'new');\r\n     \r\n      filtered.forEach(order => {\r\n        if (order.status === 'new') {\r\n          this.orderCount += 1;\r\n        }\r\n      });\r\n      \r\n    });\r\n\r\n     \r\n    \r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n    this.orderSubscription.unsubscribe();\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.auth.logout();\r\n    this.route.navigate(['/']);\r\n    this.msg.info('You are now logged Out', 'Logged Out');\r\n   \r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  notfound works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\r\\n<div class=\\\"container\\\" *ngIf=\\\"order\\\"> \\r\\n  <div class=\\\"row\\\">\\r\\n    <div col>\\r\\n        <h2 class=\\\"text-center mb-4 animated slideInUp\\\"><i class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i> Thank you for submitting your order!</h2>\\r\\n        <p>Order Placed on {{ order.datePlaced }}  </p>\\r\\n       \\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <a routerLink=\\\"/\\\" class=\\\" btn btn-dark\\\"><i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i> Order More/ Go Back</a>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col col-sm-12\\\">\\r\\n      <h2>Status: <span class=\\\"badge badge-secondary text-uppercase\\\">{{ order.status }}</span></h2>\\r\\n    </div>\\r\\n    <div class=\\\"col-5\\\">\\r\\n      <ng-template #content let-modal>\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h4 class=\\\"modal-title\\\">Your Order Status Is:</h4>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n          \\r\\n           <div [ngClass]=\\\"{'bg-success': order.status === 'delivered', 'bg-info': order.status === 'new', 'bg-warning': order.status === 'in-progress'}\\\" class=\\\"text-center font-weight-bold\\\"><h1>{{ order.status | uppercase }}</h1></div>\\r\\n         </div>\\r\\n\\r\\n             <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n              \\r\\n        </div>\\r\\n       \\r\\n      </ng-template>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <button class=\\\"btn btn-outline-primary mb-2 mr-2 float-right\\\" (click)=\\\"openVerticallyCentered(content)\\\">Check Order Status</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"table-responsive-sm table-responsive-md\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th>Item/Items</th>\\r\\n          <th>Quantity</th>\\r\\n          <th>Price</th>\\r\\n          <th>Total</th>\\r\\n        </tr>\\r\\n  \\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of order.items\\\">\\r\\n          <td><img  *ngIf=\\\"item.product.picture\\\" width=\\\"50\\\" height=\\\"50\\\" class=\\\"img\\\" src=\\\"{{ item.product.picture }}\\\" alt=\\\"\\\"></td>\\r\\n          <td class=\\\"text-capitalize\\\">{{ item.product.name }}</td>\\r\\n          <td>{{ item.quantity }}</td>\\r\\n          \\r\\n          <td>{{ item.product.price | currency:'USD': 'symbol-narrow'  }}</td>\\r\\n          <td>{{ item.totalPrice | currency:'USD': 'symbol-narrow'  }}</td> \\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th></th>\\r\\n          <th></th>\\r\\n          <th>Grand Total</th>\\r\\n          <th>{{ order.grandTotal | currency:'USD': 'symbol-narrow' }}</th>\\r\\n        </tr>\\r\\n        <br>\\r\\n        <tr>\\r\\n          <th colspan=\\\"5\\\"> <h3 class=\\\"text-center alert alert-light\\\">Address Information <i class=\\\"fa fa-address-card\\\" aria-hidden=\\\"true\\\"></i></h3></th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th>Adress/Street</th>\\r\\n          <th>Apt</th>\\r\\n          <th>City</th>\\r\\n          <th>Phone</th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td><i class=\\\"fa fa-home\\\" aria-hidden=\\\"true\\\"></i> {{ order.shipping.address }}</td>\\r\\n          <td>{{ order.shipping.apt }}</td>\\r\\n          <td>{{ order.shipping.city }}</td>\\r\\n          <td><i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i> {{ order.shipping.phone }}</td>\\r\\n\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"5\\\">\\r\\n            <div *ngIf=\\\"order.shipping.message != ''; else noMessage\\\" class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  Delivery Instruction\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <blockquote class=\\\"blockquote mb-0\\\">\\r\\n                    <p>{{ order.shipping.message }}</p>\\r\\n                    \\r\\n                  </blockquote>\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n              <ng-template #noMessage>\\r\\n                  <div class=\\\"card\\\">\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                          <h4 class=\\\"text-center\\\">No Instructuion submitted for delivery</h4>\\r\\n                      </div>\\r\\n                    </div>\\r\\n              </ng-template>\\r\\n            </td>\\r\\n        </tr>\\r\\n       \\r\\n  \\r\\n  \\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n  \\r\\n      </tfoot>\\r\\n  \\r\\n    </table>\\r\\n  </div>\\r\\n  \\r\\n  </div>\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <p class=\\\"alert alert-info font-weight-light\\\" >Note: If your order status is <b>NEW. </b>  Your order has been received but not being prepared.</p>\\r\\n    </div>\\r\\n  </div>\\r\\n  \"","import { Subscription } from 'rxjs';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Order } from '../../models/order';\r\nimport { AdminOrderService } from '../../services/admin-order-service.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-order-success',\r\n  templateUrl: './order-success.component.html',\r\n  styleUrls: ['./order-success.component.css']\r\n})\r\nexport class OrderSuccessComponent implements OnInit, OnDestroy {\r\n\r\n  order: Order;\r\n  subscription: Subscription;\r\n\r\n  constructor(private adminOrder: AdminOrderService, private activatedRoute: ActivatedRoute, private modalService: NgbModal) { }\r\n\r\n  async ngOnInit() {\r\n    let id = await this.activatedRoute.snapshot.params['id'];\r\n    this.subscription = this.adminOrder.getOrder(id).subscribe(order => this.order = order );\r\n  }\r\n\r\n  openVerticallyCentered(content) {\r\n    this.modalService.open(content, { centered: true });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<div class=\\\"container animated slideInUp\\\" #pdfcontent *ngIf=\\\"product && orders[0]; else noOrders\\\"> \\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <h2 class=\\\"text-center mb-4 animated pulse\\\"><i class=\\\"fa fa-info\\\" aria-hidden=\\\"true\\\"></i> Order Details</h2>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <div>\\r\\n          <button class=\\\"btn btn-outline-primary mb-2 mr-2 float-right btn-block\\\" (click)=\\\"openVerticallyCentered(content)\\\">Check Order Status</button>\\r\\n      </div>\\r\\n        <ng-template #content let-modal>\\r\\n            <div *ngIf=\\\"orders[0]\\\" class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Your Order Status Is:</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n              \\r\\n               <div [ngClass]=\\\"{'bg-success':orders[0].status === 'delivered', 'bg-info':orders[0].status === 'new', 'bg-warning': orders[0].status === 'in-progress'}\\\" class=\\\"text-center font-weight-bold\\\"><h1>{{ orders[0].status | uppercase }}</h1></div>\\r\\n             </div>\\r\\n    \\r\\n                 <div class=\\\"modal-footer\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n                  \\r\\n            </div>\\r\\n           \\r\\n          </ng-template>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"col\\\">\\r\\n      <button (click)=\\\"goBack()\\\" class=\\\"float-right btn btn-dark\\\"><i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i> Go Back</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"table-responsive-sm table-responsive-xs table-responsive-md\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th class=\\\"d-none d-sm-block\\\"></th>\\r\\n          <th>Item/Items</th>\\r\\n          <th>Quantity</th>\\r\\n          <th>Price</th>\\r\\n          <th>Total</th>\\r\\n          <th></th>\\r\\n        </tr>\\r\\n  \\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let item of product\\\">\\r\\n          <td class=\\\"d-none d-sm-block\\\"><img  *ngIf=\\\"item.picture\\\" width=\\\"50\\\" height=\\\"50\\\" class=\\\"img\\\" src=\\\"{{ item.picture }}\\\" alt=\\\"\\\"></td>\\r\\n          <td class=\\\"text-capitalize\\\"><p class=\\\"font-weight-bold\\\">{{ item.name }}</p><p class=\\\"text-italic\\\">{{ item.flavors }}</p></td>\\r\\n          <td>{{ item.quantity }}</td>\\r\\n          \\r\\n          <td>{{ item.price | currency:'USD': 'symbol-narrow'  }}</td>\\r\\n          <td>{{ item.totalPrice | currency:'USD': 'symbol-narrow'  }}</td> \\r\\n          <td><button class=\\\"btn btn-outline-dark\\\" (click)=\\\"openBackDropCustomClass(content)\\\">View Addons</button></td>\\r\\n          <!-- ng template modal with addons -->\\r\\n          <ng-template #content let-modal>\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <h4 class=\\\"modal-title\\\">Addons Included</h4>\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n              </button>\\r\\n            </div>\\r\\n            <div *ngIf=\\\"orders\\\" class=\\\"modal-body animated slideInUp\\\">\\r\\n              <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    <h3 class=\\\"text-center card-title\\\">Ingridients/Addons Requested.</h3>\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <ul class=\\\"list-inline\\\">\\r\\n                        <li class=\\\"list-inline-item text-center\\\"><p class=\\\"mr-5 text-capitalize\\\">{{ item.addons }}</li>\\r\\n                      </ul>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"card\\\"> \\r\\n                <div class=\\\"card-header\\\">\\r\\n                  <h3 class=\\\"text-center card-title\\\">Special Request</h3></div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                 <p>{{ item.instruction }}</p> \\r\\n                </div>\\r\\n\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th class=\\\"d-none d-sm-block\\\"></th>\\r\\n          <th></th>\\r\\n          <th></th>\\r\\n          <th>Grand Total</th>\\r\\n          <th>{{ orders[0].grandTotal | currency:'USD': 'symbol-narrow' }}</th>\\r\\n          <th></th>\\r\\n        </tr>\\r\\n        <br>\\r\\n        <tr>\\r\\n          <th colspan=\\\"5\\\"> <h3 class=\\\"text-center alert alert-light\\\">Address Information <i class=\\\"fa fa-address-card\\\" aria-hidden=\\\"true\\\"></i></h3></th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <th colspan=\\\"2\\\">Adress/Street</th>\\r\\n          <th>Apt</th>\\r\\n          <th>City</th>\\r\\n          <th colspan=\\\"2\\\">Phone</th>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          \\r\\n          <td colspan=\\\"2\\\"><i class=\\\"fa fa-home\\\" aria-hidden=\\\"true\\\"></i> {{ orders[0].shipping.address }}</td>\\r\\n          <td class=\\\"text-uppercase\\\">{{ orders[0].shipping.apt }}</td>\\r\\n          <td>{{ orders[0].shipping.city }}</td>\\r\\n          <td colspan=\\\"2\\\"> <p><i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i> {{ orders[0].shipping.phone }}</p></td>\\r\\n\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td colspan=\\\"6\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                  Delivery Instruction\\r\\n                </div>\\r\\n                <div class=\\\"card-body\\\">\\r\\n                  <blockquote class=\\\"blockquote mb-0\\\">\\r\\n                    <p>{{ orders[0].shipping.message }}</p>\\r\\n                    \\r\\n                  </blockquote>\\r\\n                </div>\\r\\n              </div>\\r\\n              \\r\\n              <ng-template #noMessage>\\r\\n                  <div class=\\\"card\\\">\\r\\n                      <div class=\\\"card-body\\\">\\r\\n                          <h4 class=\\\"text-center\\\">No Instructuion submitted for delivery</h4>\\r\\n                      </div>\\r\\n                    </div>\\r\\n              </ng-template>\\r\\n            </td>\\r\\n        </tr>\\r\\n       \\r\\n      </tbody>\\r\\n      <tfoot>\\r\\n  \\r\\n      </tfoot>\\r\\n  \\r\\n    </table>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  \\r\\n  </div>\\r\\n  <div>\\r\\n    <ng-template #noOrders>\\r\\n      <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h3>No Orders to Display...</h3>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n  \"","import { OrderService } from './../../../services/order.service';\r\nimport { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { Order } from '../../../models/order';\r\nimport { Subscription } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Product } from '../../../models/product';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-order-details',\r\n  templateUrl: './order-details.component.html',\r\n  styleUrls: ['./order-details.component.css']\r\n})\r\nexport class OrderDetailsComponent implements OnInit, OnDestroy  {\r\n\r\n  id: string\r\n  orders: Order[] = [];\r\n  product: any[] = [];\r\n  subscription: Subscription;\r\n  \r\n  \r\n\r\n  constructor(private activedRoute: ActivatedRoute, private location: Location, private modalService: NgbModal, private orderServ: OrderService) { \r\n\r\n  \r\n    }\r\n\r\n   async ngOnInit() {\r\n     let id = this.activedRoute.snapshot.params['id'];\r\n     let userId = await localStorage.getItem('userId');\r\n    this.subscription = this.orderServ.getOrderByUser(userId).subscribe(orders => {this.orders = orders.filter(res => res.items[0].product.id === id);\r\n      console.log(this.orders);\r\n      this.orders.forEach(res => res.items.forEach(order => {\r\n        this.product.push({name: order.product.name,\r\n                          picture: order.product.picture,\r\n                          quantity: order.quantity,\r\n                          price: order.product.price,\r\n                          totalPrice: order.totalPrice,\r\n                          addons: order.product.addons,\r\n                          flavors: order.product.flavors,\r\n                          instruction: order.product.instruction\r\n                        })\r\n      }));\r\n      console.log(this.product);\r\n    \r\n    });\r\n\r\n    \r\n    }\r\n\r\n    openBackDropCustomClass(content) {\r\n      this.modalService.open(content, {backdropClass: 'light-blue-backdrop'});\r\n    }\r\n\r\n\r\n    openVerticallyCentered(content) {\r\n      this.modalService.open(content, { centered: true });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    goBack() {\r\n     this.location.back();\r\n    }\r\n\r\n\r\n}","module.exports = \".card-footer {\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.example-radio-group {\\r\\n    display: inline-flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n\\r\\n.example-radio-button {\\r\\n    margin: 5px;\\r\\n  }\\r\\n\\r\\n.example-selected-value {\\r\\n    margin: 15px 0;\\r\\n  }\\r\\n\\r\\n.list-inline {\\r\\n    padding-left: 0;\\r\\n    list-style: none;\\r\\n    display: inline-flex;\\r\\n    margin-right: 10px;\\r\\n    font-style: italic;\\r\\n}\\r\\n\\r\\n.dark-modal .modal-content {\\r\\n  background-color: #84ad79;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.dark-modal .close {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.light-blue-backdrop {\\r\\n  background-color: #5cb3fd;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"\\r\\n<div *ngIf=\\\"product.name\\\" class=\\\"card top\\\">\\r\\n  <img width=\\\"400\\\" height=\\\"300\\\" *ngIf=\\\"product.picture\\\" class=\\\"card-img-top\\\" [src]=\\\"product.picture\\\" alt=\\\"{{ product.name }}\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h4 class=\\\"card-title text-capitalize\\\">{{ product.name }}</h4>\\r\\n    <p class=\\\"card-text\\\">{{ product.price | currency:'USD': 'symbol-narrow' }}</p>\\r\\n    <ul class=\\\"list-inline\\\" *ngFor=\\\"let flavor of product.flavors\\\">\\r\\n      <li class=\\\"list-inline-item text-capitalize\\\">{{ flavor }}</li>\\r\\n    </ul>\\r\\n  </div>\\r\\n  <div #child *ngIf=\\\"showActions && shoppingCart && flavors?.length > 0 || addons.length > 0; else noAddons\\\" class=\\\"card-footer\\\">\\r\\n    <button *ngIf=\\\"!itemCount; else updateQuantity\\\" (click)=\\\"openLg(content)\\\" class=\\\"btn btn-dark btn-block\\\">Add to\\r\\n      Cart</button>\\r\\n\\r\\n    <!-- modal template -->\\r\\n    <ng-template #content let-modal>\\r\\n      <div class=\\\"modal-header animated fadeInUp\\\">\\r\\n        <h4 class=\\\"modal-title text-capitalize\\\">Adding {{ product.name}} to cart</h4>\\r\\n        <button #closeModal type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body animated fadeInRight\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div *ngIf=\\\"flavors.length > 0\\\" class=\\\"col\\\">\\r\\n            <p class=\\\"font-weight-bold\\\">Select Type/Flavor</p>\\r\\n            <p class=\\\"text-capitalize\\\">\\r\\n\\r\\n              <mat-radio-group class=\\\"example-radio-group\\\" [(ngModel)]=\\\"flavorSelected\\\">\\r\\n                <mat-radio-button (change)=\\\"onCheckedBox($event)\\\" class=\\\"example-radio-button\\\" *ngFor=\\\"let flavor of flavors\\\"\\r\\n                  [value]=\\\"flavor\\\">\\r\\n                  {{ flavor }}\\r\\n                </mat-radio-button>\\r\\n              </mat-radio-group>\\r\\n            </p>\\r\\n            <p *ngIf=\\\"!enableAddBtn\\\"><i class=\\\"alert  alert-warning\\\">Pick one</i></p>\\r\\n\\r\\n          </div>\\r\\n          <div *ngIf=\\\"product.addons.length > 0\\\" class=\\\"col\\\">\\r\\n            <p class=\\\"font-weight-bold\\\">Select Addons/Items</p>\\r\\n            <p *ngFor=\\\"let item of addons\\\" class=\\\"text-capitalize\\\">\\r\\n              <mat-checkbox value=\\\"{{item}}\\\" name=\\\"{{ item }}\\\" (change)=\\\"onSelect($event)\\\">{{ item }}</mat-checkbox>\\r\\n            </p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <label class=\\\"font-weight-bold\\\" for=\\\"message\\\">Special intructions</label>\\r\\n          <textarea [(ngModel)]=\\\"message\\\" class=\\\"form-control\\\" name=\\\"message\\\" id=\\\"message\\\" placeholder=\\\"Dressing on the side? No Mayonnaise?. If you want an item not listed, ask for it here. We will add it. Let us know!\\\"\\r\\n            cols=\\\"30\\\" rows=\\\"5\\\"></textarea>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"modal.close('Close click')\\\">Close</button>\\r\\n        <button [disabled]=\\\"!enableAddBtn && product.addons.length === 0\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCart(closeModal)\\\">Add\\r\\n          to Cart</button>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n\\r\\n    <ng-template #updateQuantity>\\r\\n      <product-quantity [itemCount]=\\\"itemCount\\\" [product]=\\\"product\\\" [shopping-cart]=\\\"shoppingCart\\\">\\r\\n\\r\\n      </product-quantity>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n\\r\\n  <!-- if item has no addons -->\\r\\n  <ng-template #noAddons>\\r\\n    <div class=\\\"card-footer\\\">\\r\\n\\r\\n      <button *ngIf=\\\"!itemCount; else updateQuantity2\\\" class=\\\"btn btn-dark btn-block\\\" (click)=\\\"updateCart()\\\"> Add to\\r\\n        Cart</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n  <ng-template #updateQuantity2>\\r\\n    <product-quantity [itemCount]=\\\"itemCount\\\" [product]=\\\"product\\\" [shopping-cart]=\\\"shoppingCart\\\">\\r\\n\\r\\n    </product-quantity>\\r\\n  </ng-template>\\r\\n\\r\\n</div>\"","\r\nimport { ShoppingCart } from '../../models/shoppingCart';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ShoppingCartService } from './../../services/shopping-cart.service';\r\nimport { Product } from './../../models/product';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { MatCheckboxChange, MatRadioChange, throwMatDialogContentAlreadyAttachedError } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'product-card',\r\n  templateUrl: './product-card.component.html',\r\n  styleUrls: ['./product-card.component.css']\r\n})\r\nexport class ProductCardComponent implements OnInit {\r\n\r\n  @Input('product') product: Product;\r\n  @Input('show-actions') showActions = true;\r\n  @Input('shopping-cart') shoppingCart: ShoppingCart;\r\n  @Input('itemCount') itemCount: number;\r\n\r\n  addons: string[] = [];\r\n  flavors: string[] | string;\r\n  flavorSelected: string;\r\n  flavorsSelected= [];\r\n  itemSelected = [];\r\n  message = '';\r\n  enableAddBtn: boolean = false;\r\n  noFlavorsAdded: boolean = false;\r\n \r\n\r\n  constructor(private shoppingCartServ: ShoppingCartService, private modalService: NgbModal)  { \r\n   \r\n  }\r\n\r\n async addToCart() {\r\n\r\n   await this.shoppingCartServ.addToCart(this.product);\r\n  \r\n  }\r\n\r\n   onSelect(e: MatCheckboxChange) {\r\n    if (e.checked) {\r\n      //add item if not in array\r\n      if (this.itemSelected.indexOf(<string>e.source.value) === -1) this.itemSelected.push(<string>e.source.value);\r\n  \r\n    } else {\r\n      //revome item of already in.\r\n      this.itemSelected.pop();\r\n    \r\n    }\r\n   \r\n  }\r\n\r\n  onCheckedBox(e: MatRadioChange) {\r\n    if (e.value) {\r\n      this.enableAddBtn = true;\r\n      this.flavorsSelected[0] = e.value;\r\n    \r\n    } else {\r\n      this.enableAddBtn = false;\r\n      \r\n    }\r\n    \r\n  }\r\n\r\nasync updateCart(event?: HTMLButtonElement) {\r\n\r\n  if (event) {\r\n    if(this.flavorsSelected.length < 1) {\r\n      alert('Please Make a Selection.');\r\n      //this.flavorSelected = '';\r\n      return\r\n    }\r\n  }\r\n  \r\n  this.product.addons = this.itemSelected || [];\r\n  this.product.instruction = this.message;\r\n  this.product.flavors = this.flavorsSelected;\r\n\r\n  if(this.flavorsSelected) {\r\n\r\n    await this.shoppingCartServ.addToCart(this.product);\r\n    \r\n    if(event) {\r\n    \r\n    event.click();\r\n    \r\n    }\r\n    \r\n  } \r\n    \r\n \r\n  }\r\n\r\n async ngOnInit() {\r\n\r\n  this.addons = this.product.addons;\r\n  this.flavors = this.product.flavors;\r\n\r\n    (await this.shoppingCartServ.getOneCart(this.product.id)).subscribe(item => \r\n      {\r\n        if (item ) {\r\n         this.itemCount = item.quantity;\r\n         \r\n        }\r\n        else {\r\n          return null;\r\n        }\r\n      });\r\n\r\n      \r\n  }\r\n\r\nasync  openLg(content) {\r\n  \r\n    this.modalService.open(content, { centered: true });\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","module.exports = \".category {\\r\\n    padding-top: 80px;\\r\\n}\\r\\n\\r\\n@media (max-width: 576px) {\\r\\n    .category {\\r\\n        padding-top: 0px;\\r\\n    }\\r\\n    \\r\\n }\"","module.exports = \"<div class=\\\"sticky-top category clear-fix mt-2\\\">\\r\\n  <div class=\\\"list-group\\\">\\r\\n    <a routerLink=\\\"/\\\" class=\\\"list-group-item list-group-item-action\\\" [class.active]=\\\"!category\\\">All Categories</a>\\r\\n    <a *ngFor=\\\"let c of categories$ | async\\\" class=\\\"list-group-item list-group-item-action text-capitalize\\\" routerLink=\\\"/\\\"\\r\\n      [queryParams]=\\\"{ category: c.id }\\\" [class.active]=\\\"category === c.id\\\">{{ c.name }}</a>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CategoryService } from '../../services/category.service';\r\n\r\n@Component({\r\n  selector: 'product-filter',\r\n  templateUrl: './product-filter.component.html',\r\n  styleUrls: ['./product-filter.component.css']\r\n})\r\nexport class ProductFilterComponent implements OnInit {\r\n\r\n  \r\n  categories$;\r\n  @Input('category') category;\r\n\r\n  \r\n\r\n  constructor(private categoryServ: CategoryService) {\r\n    this.categories$ = this.categoryServ.getCategories();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".grid-3 {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    -ms-grid-columns: (1fr)[3];\\r\\n        grid-template-columns: repeat(3, 1fr);\\r\\n    grid-gap: 10px;\\r\\n}\"","module.exports = \"<div class=\\\"grid-3\\\">\\r\\n  <div  class=\\\"\\\">\\r\\n    <button\\r\\n      (click)=\\\"removeFromCart()\\\"\\r\\n      class=\\\"btn btn-secondary float-left\\\"><mat-icon><i class=\\\"material-icons md-18\\\">remove</i></mat-icon></button> \\r\\n  </div>\\r\\n  <div *ngIf=\\\"itemCount > 0\\\" class=\\\"text-center text-justify\\\">\\r\\n     <!-- {{ shoppingCart.getQuantity(product) }} in cart -->\\r\\n     {{ itemCount }} in cart\\r\\n  </div>\\r\\n  <div *ngIf=\\\"itemCount === 0\\\" class=\\\"col text-center\\\">\\r\\n    <!-- {{ shoppingCart.getQuantity(product) }} in cart -->\\r\\n    Nothing\\r\\n </div>\\r\\n  <div *ngIf=\\\"!itemCount\\\" class=\\\"text-center text-justify\\\">\\r\\n   <p class=\\\"text-center\\\">{{ shoppingCart.getQuantity(product) }} </p> \\r\\n    \\r\\n </div>\\r\\n  <div class=\\\"\\\">\\r\\n    <button \\r\\n      (click)=\\\"addToCart()\\\"\\r\\n      class=\\\"btn btn-secondary float-right\\\"><mat-icon><i class=\\\"material-icons md-18\\\">add</i></mat-icon></button> \\r\\n  </div>\\r\\n</div>\"","import { Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { ShoppingCartService } from '../../services/shopping-cart.service';\r\nimport { Product } from '../../models/product';\r\nimport { ShoppingCart } from '../../models/shoppingCart';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'product-quantity',\r\n  templateUrl: './product-quantity.component.html',\r\n  styleUrls: ['./product-quantity.component.css']\r\n})\r\nexport class ProductQuantityComponent {\r\n\r\n  @Input('product') product: Product;\r\n  @Input('shopping-cart') shoppingCart: ShoppingCart;\r\n  @Input('itemCount') itemCount: number;\r\n\r\n\r\n  constructor(private cartService: ShoppingCartService) { \r\n    \r\n  }\r\n\r\n  addToCart() {\r\n\r\n    this.cartService.addToCart(this.product).then(res => console.log('ADDED')).catch(err => console.log(err));\r\n  }\r\n\r\n  removeFromCart() {\r\n    this.cartService.removeFromCart(this.product).then(() => console.log(\"Deleted\")).catch(err => console.log(err));\r\n  }\r\n\r\n\r\n}\r\n\r\n","module.exports = \"img {\\r\\n    width: auto;\\r\\n    height: 400px;\\r\\n}\\r\\n\\r\\n.spanCat {\\r\\n    font-family: 'Cookie', cursive;\\r\\n    font-size: 1.7rem;\\r\\n}\\r\\n\\r\\n.grid-2 {\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n    grid-column-gap: 50px;\\r\\n    grid-row-gap: 30px;\\r\\n\\r\\n    -ms-grid-columns: (1fr)[2];\\r\\n\\r\\n        grid-template-columns: repeat(2, 1fr);\\r\\n}\\r\\n\\r\\n@media (max-width: 576px) { \\r\\n    .grid-2 {\\r\\n        display: -ms-grid;\\r\\n        display: grid;\\r\\n        padding: 20px;\\r\\n        grid-column-gap: 20px;\\r\\n        grid-row-gap: 20px;\\r\\n        -ms-grid-columns: 1fr;\\r\\n            grid-template-columns: 1fr;\\r\\n    }\\r\\n    img {\\r\\n        width: auto !important;\\r\\n        height: auto !important;\\r\\n    }\\r\\n\\r\\n    \\r\\n }\"","module.exports = \"<div style=\\\"width: 100%\\\" class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-3 mx-auto d-none d-sm-block\\\">\\r\\n    <product-filter [category]=\\\"category\\\"></product-filter>\\r\\n</div>\\r\\n<div class=\\\"col mx-auto d-block d-sm-none\\\">\\r\\n    <div ngbDropdown class=\\\"d-inline-block\\\">\\r\\n      <button class=\\\"btn btn-outline-secondary btn-block mb-2\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle>Filter Products</button><span *ngIf=\\\"category; else noCategory\\\" \\r\\n      class=\\\"text-center text-capitalize spanCat\\\">Viewing: {{ category }}</span>\\r\\n      <ng-template #noCategory>\\r\\n          <span\\r\\n          class=\\\"text-center text-capitalize spanCat\\\">Viewing: All Products</span>\\r\\n      </ng-template>\\r\\n      <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\r\\n          <product-filter [category]=\\\"category\\\"></product-filter>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n<div class=\\\"col mx-auto\\\">\\r\\n \\r\\n<div class=\\\"grid-2\\\" *ngIf=\\\"cart$ | async as cart\\\">\\r\\n    <ng-container *ngFor=\\\"let product of filteredProducts\\\">\\r\\n      <product-card [product]=\\\"product\\\" [shopping-cart]=\\\"cart\\\"></product-card>\\r\\n    </ng-container>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n \\r\\n  \\r\\n\\r\\n\\r\\n\"","import { ShoppingCartService } from './../../services/shopping-cart.service';\r\nimport { Product } from './../../models/product';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProductService } from './../../services/product.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport { ShoppingCart } from '../../models/shoppingCart';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.css']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n\r\n  products: Product[] = [];\r\n  category: string;\r\n  filteredProducts: Product[] = [];\r\n  cart$: Observable<ShoppingCart>;\r\n  subscription: Subscription;\r\n \r\n\r\n  constructor(\r\n  \r\n    private productServ: ProductService, \r\n    private activeRoute: ActivatedRoute,\r\n    private shoppingCartServ: ShoppingCartService\r\n    \r\n\r\n    ){ }\r\n\r\n  async ngOnInit() {\r\n   \r\n    this.cart$ = (await this.shoppingCartServ.getCart());\r\n    this.populateProducts();\r\n     \r\n\r\n  }\r\n\r\n  private populateProducts() { \r\n   \r\n    this.productServ.getProducts().subscribe(products => {\r\n      this.products = products;\r\n      this.activeRoute.queryParamMap.subscribe(params => {\r\n        this.category = params.get('category');\r\n        this.filteredProducts = (this.category) ?\r\n          this.products.filter(p => p.category === this.category) :\r\n          this.products;\r\n      })\r\n     \r\n    });\r\n   \r\n }\r\n\r\n}","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\" class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-10 mx-auto\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <h1 class=\\\"text-center pb-4 pt-3\\\">\\r\\n          <span class=\\\"text-primary\\\"><i class=\\\"fa fa-lock\\\"></i> Sign Up /</span> Register\\r\\n        </h1>\\r\\n        <div *ngIf=\\\"error\\\" class=\\\"panel panel-danger\\\">\\r\\n              {{ error }}\\r\\n        </div>\\r\\n        <form #myForm=\\\"ngForm\\\" (submit)=\\\"onSubmit(myForm)\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                  <label for=\\\"name\\\"><i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i> Name</label>\\r\\n                  <input type=\\\"text\\\" name=\\\"name\\\" #username=\\\"ngModel\\\" [(ngModel)]=\\\"user.name\\\" \\r\\n                  class=\\\"form-control\\\" \\r\\n                  [ngClass]=\\\"{'is-invalid': username.touched && username.errors, 'is-valid': username.valid}\\\"\\r\\n                  required>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"username.errors?.required\\\">\\r\\n                    Name is required\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col\\\">\\r\\n                    <label for=\\\"last_name\\\">Last Name</label>\\r\\n                    <input type=\\\"text\\\" name=\\\"lname\\\" #userlname=\\\"ngModel\\\" [(ngModel)]=\\\"user.last_name\\\"\\r\\n                     class=\\\"form-control\\\" \\r\\n                     [ngClass]=\\\"{'is-invalid': userlname.touched && userlname.errors, 'is-valid': userlname.valid}\\\"\\r\\n                     required>\\r\\n                     <div class=\\\"invalid-feedback\\\" *ngIf=\\\"userlname.errors?.required\\\">\\r\\n                       Name is required..\\r\\n                     </div>\\r\\n                  </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                  <label for=\\\"phone\\\"><i class=\\\"fa fa-phone\\\" aria-hidden=\\\"true\\\"></i> Phone</label>\\r\\n                  <input type=\\\"phone\\\" name=\\\"phone\\\" phone=\\\"CN\\\" #userphone=\\\"ngModel\\\" minlength=\\\"10\\\" [(ngModel)]=\\\"user.phone\\\"\\r\\n                  [ngClass]=\\\"{'is-invalid': userphone.touched && userphone.errors, 'is-valid': userphone.valid}\\\"\\r\\n                   class=\\\"form-control\\\" required>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"userphone.errors?.required\\\">\\r\\n                    Phone is required\\r\\n                  </div>\\r\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"userphone.errors?.phone || userphone.errors?.minlength\\\">\\r\\n                      Phone is invalid...\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group col\\\">\\r\\n                    <label for=\\\"email\\\"><i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i> Email</label>\\r\\n                    <input type=\\\"email\\\" name=\\\"email\\\" email required #useremail=\\\"ngModel\\\" [(ngModel)]=\\\"user.email\\\" \\r\\n                    class=\\\"form-control\\\" \\r\\n                    [ngClass]=\\\"{'is-invalid': useremail.touched && useremail.errors, 'is-valid': useremail.valid}\\\"\\r\\n                    required>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"useremail.errors?.required\\\">\\r\\n                      Email is required\\r\\n                    </div>\\r\\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"useremail.errors?.email\\\">\\r\\n                        Email is invalid...\\r\\n                      </div>\\r\\n                    \\r\\n                  </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                  <label for=\\\"password\\\">Password</label>\\r\\n                  <input type=\\\"password\\\" required name=\\\"password\\\" #userpsw [(ngModel)]=\\\"user.password\\\" class=\\\"form-control\\\" required>\\r\\n               \\r\\n              </div>\\r\\n              <div class=\\\"form-group col\\\">\\r\\n                <label for=\\\"password\\\">Password</label>\\r\\n                <input type=\\\"password\\\" id=\\\"psw2\\\" required name=\\\"password2\\\" #userpsw2 [(ngModel)]=\\\"psw\\\" \\r\\n                class=\\\"form-control\\\" \\r\\n                (change)=checkPassword($event)\\r\\n                [ngClass]=\\\"{'is-invalid': userpsw2.touched && userpsw2.errors, 'is-valid': pswMatching}\\\"\\r\\n                required>\\r\\n                <div class=\\\"invalid-feedback\\\" [hidden]=\\\"user.pasword === psw\\\">\\r\\n                    Passwords do not match...\\r\\n                </div>\\r\\n            </div>\\r\\n              \\r\\n          </div>\\r\\n          <br>\\r\\n          <h3 class=\\\"text-center\\\"><i class=\\\"fa fa-address-card-o\\\" aria-hidden=\\\"true\\\"></i> Address Information</h3>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <label for=\\\"address\\\"><i class=\\\"fa fa-home\\\" aria-hidden=\\\"true\\\"></i> Address</label>\\r\\n              <input type=\\\"text\\\" #useraddress=\\\"ngModel\\\" name=\\\"address\\\" class=\\\"form-control\\\" \\r\\n              [ngClass]=\\\"{'is-invalid': useraddress.touched && useraddress.errors, 'is-valid': useraddress.valid}\\\"\\r\\n              required [(ngModel)]=\\\"user.address.address\\\">\\r\\n              <div class=\\\"invalid-feedback\\\" *ngIf=\\\"useraddress.errors?.required\\\">\\r\\n                Address is required\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group col\\\">\\r\\n                <label for=\\\"apt\\\">Apt</label>\\r\\n                <input type=\\\"text\\\" name=\\\"apt\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.address.apt\\\">\\r\\n              </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <label for=\\\"city\\\">City</label>\\r\\n              <input type=\\\"text\\\" name=\\\"city\\\" id=\\\"city\\\" required [(ngModel)]=\\\"user.address.city\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col\\\">\\r\\n              <label for=\\\"state\\\">State</label>\\r\\n              <input type=\\\"text\\\" name=\\\"state\\\" required id=\\\"state\\\" [(ngModel)]=\\\"user.address.state\\\" class=\\\"form-control\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group col\\\">\\r\\n                <label for=\\\"zipcode\\\">Zip Code</label>\\r\\n                <input type=\\\"text\\\" name=\\\"zipcode\\\" required id=\\\"zipcode\\\" [(ngModel)]=\\\"user.address.zipcode\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n          </div>\\r\\n          \\r\\n            \\r\\n         \\r\\n          \\r\\n          <button [disabled]=\\\"!myForm.form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-dark btn-block\\\">Register</button>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n \\r\\n</div>\\r\\n\"","import { UsersService } from '../../services/users/users.service';\r\nimport { User } from './../../models/user';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LoginsService } from '../../services/logins/logins.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  \r\n\r\n  user: User = {\r\n    name: '',\r\n    last_name: '',\r\n    phone: '',\r\n    email: '',\r\n    password: '',\r\n    joined: new Date().toLocaleString(),\r\n    address: {\r\n      address: '',\r\n      apt: '',\r\n      city: '',\r\n      state: 'New York',\r\n      zipcode: ''\r\n    },\r\n    isAdmin: false\r\n\r\n  }\r\n  psw: string;\r\n  pswMatching = false;\r\n  error: string;\r\n\r\n  constructor(private logServ: LoginsService, private msg: ToastrService, private router: Router, private userServ: UsersService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  onSubmit({value, valid}: { value: User, valid: boolean}) {\r\n    \r\n    if (!valid) {\r\n      // add error\r\n        console.log('error');\r\n\r\n    } \r\n    if(this.psw === this.user.password) {\r\n      //register the user\r\n      this.logServ.register(this.user.email.toLowerCase(), this.user.password).then(res => {\r\n        //set id in localstorage\r\n        localStorage.setItem('userId', res.user.uid);\r\n        //notify the user about success\r\n        \r\n        this.msg.success('Registration Succefull', 'Registered');\r\n        //adding the user\r\n        this.userServ.addUser(this.user, res.user.uid);\r\n        this.router.navigate(['/']);\r\n      })\r\n      .catch(err => this.msg.error(err.message, 'Error'));\r\n      \r\n    } else {\r\n      this.error = 'Passwords do not match';\r\n      this.msg.error('Passwords do not match', 'Please Try Again');\r\n      return;\r\n    }\r\n  }\r\n\r\n  checkPassword(event) {\r\n    let psw2_field = document.getElementById('psw2');\r\n    if(this.user.password !== this.psw) {\r\n      psw2_field.classList.add('is-invalid');\r\n      \r\n      this.pswMatching = false;\r\n    } \r\n   \r\n    if (this.user.password === this.psw && !this.pswMatching) {\r\n      psw2_field.classList.remove('is-invalid');\r\n      this.pswMatching = true;\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"user\\\">\\r\\n  <form #shippingForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveOrder(shippingForm)\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <label for=\\\"name\\\">Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.name\\\" required  name=\\\"name\\\" placeholder=\\\"First name\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col\\\">\\r\\n        <label for=\\\"lname\\\">Last Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"user.last_name\\\"  name=\\\"last_name\\\" placeholder=\\\"Last name\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <label for=\\\"adresss\\\">Address</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"user.address.address\\\" name=\\\"address\\\" placeholder=\\\"Address\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <label for=\\\"apt\\\">Apt /Suite / Floor</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.address.apt\\\" name=\\\"apt\\\" placeholder=\\\"Apt / Suite / Floor\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n      <label for=\\\"adresss\\\">City</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"user.address.city\\\" name=\\\"city\\\" placeholder=\\\"City\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <label for=\\\"state\\\">State</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"user.address.state\\\" name=\\\"state\\\" placeholder=\\\"State\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n        <label for=\\\"zipcode\\\">Zip Code</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"user.address.zipcode\\\" minlength=\\\"5\\\" name=\\\"zipcode\\\" placeholder=\\\"Zip Code\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n      <label for=\\\"phone\\\">Phone</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"user.phone\\\" name=\\\"phone\\\" placeholder=\\\"Phone\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <label for=\\\"apt\\\">Email</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" required  [(ngModel)]=\\\"user.email\\\"  name=\\\"email\\\" placeholder=\\\"Email Address\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n       <label for=\\\"message\\\">Instructions for Delivery</label>\\r\\n       <textarea name=\\\"message\\\" id=\\\"\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"message\\\" cols=\\\"30\\\" rows=\\\"5\\\" placeholder=\\\"Type any helpful information for the delivery guy.\\\"></textarea>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <button   class=\\\"btn btn-danger btn-block\\\" type=\\\"reset\\\">Clear Form</button>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n        <button [disabled]=\\\"!shippingForm.valid\\\" class=\\\"btn btn-success btn-block\\\" type=\\\"submit\\\">Place Order</button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  </form>\\r\\n  <br>\\r\\n  <blockquote style=\\\"font-style:italic\\\">Note: Address is already populated with your default information, feel free to change it</blockquote>\\r\\n</div>\"","import { ToastrService } from 'ngx-toastr';\r\nimport { OrderService } from './../../services/order.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { User } from './../../models/user';\r\nimport { ShoppingCart } from './../../models/shoppingCart';\r\nimport { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { UsersService } from '../../services/users/users.service';\r\nimport { Order } from '../../models/order';\r\n\r\n\r\n@Component({\r\n  selector: 'shipping-form',\r\n  templateUrl: './shipping-form.component.html',\r\n  styleUrls: ['./shipping-form.component.css']\r\n})\r\nexport class ShippingFormComponent implements OnInit, OnDestroy {\r\n\r\n  @Input('cart') cart: ShoppingCart;\r\n  userId: string;\r\n  subscription: Subscription;\r\n  message: string = '';\r\n\r\n\r\n  user: User = {\r\n    name: '',\r\n    last_name: '',\r\n    email: '',\r\n    phone: '',\r\n    isAdmin: false,\r\n    address: {\r\n      address: '',\r\n      apt: '',\r\n      city: '',\r\n      state: '',\r\n      zipcode: ''\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private userService: UsersService, \r\n    private router: Router, \r\n    private notification: ToastrService,\r\n    private orderServ: OrderService) {\r\n\r\n  }\r\n\r\n  async ngOnInit() {\r\n\r\n    let id = await localStorage.getItem('userId');\r\n    if (id) {\r\n      //user subcription \r\n      this.subscription = this.userService.getUser(id).subscribe(user => {this.user = user ; this.userId = user.id});\r\n    \r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n  async saveOrder(e) {\r\n    let shipping = e.value;\r\n    let order = new Order(this.userId, shipping, this.cart);\r\n    let orderToSubmmit = {\r\n      datePlaced: order.datePlaced,\r\n      grandTotal: order.grandTotal,\r\n      items: order.items,\r\n      quantity: this.cart.totalItemsCount,\r\n      shipping: order.shipping,\r\n      message: this.message,\r\n      userId: order.userId,\r\n      status: order.status,\r\n      delivered: false,\r\n      numberSold: this.cart.totalItemsCount + this.cart.numberSold\r\n\r\n    }\r\n\r\n    let result = await this.orderServ.placeOrder(orderToSubmmit);\r\n    if (result) {\r\n      this.notification.success(`Thank You ${order.shipping.name.toUpperCase()}!`, 'You order has been proccesed.');\r\n      this.orderServ.checkForNewOrder(true);\r\n    } else {\r\n      this.orderServ.checkForNewOrder(false);\r\n    }\r\n    \r\n    this.router.navigate(['/order-success', result.id]);\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ShoppingCart } from '../../../models/shoppingCart';\n\n@Component({\n  selector: 'order-review',\n  templateUrl: './order-review.component.html',\n  styleUrls: ['./order-review.component.css']\n})\nexport class OrderReviewComponent implements OnInit {\n\n  @Input('cart') cart: ShoppingCart;\n \n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card\\\" *ngIf=\\\"cart\\\">\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <h5 class=\\\"card-title text-center\\\">Order Summary</h5>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <p class=\\\"card-text\\\">{{ cart.totalItemsCount}} Items in Cart</p>\\r\\n      </div>\\r\\n      <div class=\\\"col\\\">\\r\\n        <a routerLink=\\\"/shopping-cart\\\" class=\\\"btn btn-dark float-right mb-2\\\">Add/Edit Cart</a>\\r\\n      </div>\\r\\n    </div>\\r\\n   \\r\\n    <div class=\\\"table-responsive-sm table-responsive-md\\\" >\\r\\n      <table class=\\\"table\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"text-center\\\">\\r\\n            <th>Qty</th>\\r\\n            <th>Items</th>\\r\\n            <th>Price</th>\\r\\n          </tr>\\r\\n\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of cart.items\\\">\\r\\n            <td class=\\\"text-center\\\">\\r\\n                <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li class=\\\"list-group-item\\\" >\\r\\n                      {{ item.quantity}}\\r\\n                     \\r\\n                    </li>\\r\\n                  </ul>\\r\\n                \\r\\n            </td>\\r\\n            <td  class=\\\"text-center\\\">\\r\\n                <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li class=\\\"list-group-item text-capitalize\\\" >\\r\\n                      {{ item.name }}\\r\\n                     \\r\\n                    </li>\\r\\n                  </ul>\\r\\n                \\r\\n            </td>\\r\\n            <td class=\\\"text-center\\\">\\r\\n                <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li  class=\\\"list-group-item \\\" >\\r\\n                      {{ item.totalPrice | currency:'USD':'symbol-narrow' }}\\r\\n                     \\r\\n                    </li>\\r\\n                  </ul>\\r\\n            </td>\\r\\n          </tr>\\r\\n         \\r\\n        </tbody>\\r\\n        <tfoot>\\r\\n          <tr>\\r\\n            <th></th>\\r\\n            <th></th>\\r\\n            <th>\\r\\n                <ul class=\\\"list-group list-group-flush\\\">\\r\\n                    <li class=\\\"list-group-item font-weight-bold\\\">\\r\\n                      Total\\r\\n                      <div class=\\\"float-right\\\">\\r\\n                        {{ cart.totalPrice | currency:'USD':'symbol-narrow' }}\\r\\n                      </div>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n            </th>\\r\\n          </tr>\\r\\n        \\r\\n\\r\\n        </tfoot>\\r\\n\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ShoppingCart } from '../../models/shoppingCart';\r\n\r\n@Component({\r\n  selector: 'shopping-cart-summary',\r\n  templateUrl: './shopping-cart-summary.component.html',\r\n  styleUrls: ['./shopping-cart-summary.component.css']\r\n})\r\nexport class ShoppingCartSummaryComponent implements OnInit {\r\n\r\n  @Input('cart') cart: ShoppingCart;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"@media (max-width: 576px) {\\r\\n    img {\\r\\n        display: none;\\r\\n    }\\r\\n}\"","module.exports = \"<h3 class=\\\"mb-3\\\">Shopping Cart</h3>\\r\\n<div class=\\\"mb-5 animated fadeIn\\\" *ngIf=\\\"cart$ | async as cart\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <p> {{ cart.totalItemsCount }} Items in Cart. </p>\\r\\n       \\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n        <button \\r\\n        *ngIf=\\\"cart.totalItemsCount > 0\\\"\\r\\n        (click)=\\\"clearCart()\\\"\\r\\n        class=\\\"btn btn-warning float-right\\\">Empty Cart</button>\\r\\n    </div>\\r\\n     \\r\\n  </div>\\r\\n \\r\\n  <br>\\r\\n  <div *ngIf=\\\"cart.totalItemsCount > 0\\\" class=\\\"table-responsive-sm table-responsive-xs table-responsive-md\\\">\\r\\n  <table class=\\\"table\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th></th>\\r\\n        <th>Product</th>\\r\\n        <th class=\\\"text-center\\\" >Qty</th>\\r\\n        <th class=\\\"text-right\\\" >Price</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let item of cart.items\\\">\\r\\n        <td>\\r\\n          <div *ngIf=\\\"item.picture\\\" class=\\\"thumbnail\\\">\\r\\n            <img width=\\\"60\\\" height=\\\"60\\\" class=\\\"img-circled\\\" [src]=\\\"item.picture\\\" alt=\\\"\\\">\\r\\n          </div>\\r\\n        </td>\\r\\n        <td class=\\\"text-capitalize\\\">\\r\\n         <p class=\\\"font-weight-bold\\\">{{ item.name }}</p> \\r\\n          <p> <i>{{ item.flavors[0]}}</i></p>\\r\\n        </td>\\r\\n        <td>\\r\\n\\r\\n          <product-quantity [product]=\\\"item\\\" [shopping-cart]=\\\"cart\\\">\\r\\n          </product-quantity>\\r\\n        </td>\\r\\n        <td class=\\\"text-right\\\">\\r\\n          {{ item.totalPrice | currency:'USD':'symbol-narrow' }}\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n    <tfoot>\\r\\n      <tr>\\r\\n        <th></th>\\r\\n        <th></th>\\r\\n        <th></th>\\r\\n        <th class=\\\"text-right\\\">Grand Total: {{ cart.totalPrice | currency:'USD':'symbol-narrow' }}</th>\\r\\n      </tr>\\r\\n    </tfoot> \\r\\n  \\r\\n  </table>\\r\\n</div>\\r\\n<div *ngIf=\\\"cart.totalItemsCount > 0\\\">\\r\\n    <a [routerLink]=\\\"['/']\\\" class=\\\"btn btn-info btn-lg mr-2\\\" >More Antojitos</a>\\r\\n    <button \\r\\n      (click)=\\\"checkOut(cart)\\\"\\r\\n      class=\\\"btn btn-dark btn-lg\\\"><i class=\\\"fa fa-shopping-cart\\\" aria-hidden=\\\"true\\\"></i> Check Out</button>\\r\\n      \\r\\n</div>\\r\\n \\r\\n</div>\\r\\n\"","import { ShoppingCart } from './../../models/shoppingCart';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ShoppingCartService } from '../../services/shopping-cart.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-shopping-cart',\r\n  templateUrl: './shopping-cart.component.html',\r\n  styleUrls: ['./shopping-cart.component.css']\r\n})\r\nexport class ShoppingCartComponent implements OnInit {\r\n\r\n  cart$;\r\n  //totalPrice: number;\r\n\r\n\r\n  constructor(private shoppingCartService: ShoppingCartService, private router: Router) { \r\n    \r\n  }\r\n\r\n   async ngOnInit() {\r\n\r\n    this.cart$ = (await this.shoppingCartService.getCart());\r\n   \r\n\r\n  }\r\n  clearCart() { \r\n    if (!confirm('Are you sure you want to clear the cart?')) return\r\n    \r\n    this.shoppingCartService.clearCart().then(() => console.log(\"Cart Deleted\")).catch(err => console.log(err));\r\n\r\n  }\r\n\r\n  checkOut(cart: ShoppingCart) {\r\n    let price = cart.totalPrice;\r\n    let diff = (10  - cart.totalPrice).toFixed(2); \r\n    if(price < 10) {\r\n      alert(`$10.00 Minimum for Delivery. Please just add $${diff} or more`);\r\n      return\r\n    } else {\r\n      this.router.navigate(['/check-out']);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \".data-table {\\r\\n    width: 90%;\\r\\n    margin: 20px auto;\\r\\n}\"","module.exports = \" <div class=\\\"mat-elevation-z8 data-table\\\">\\r\\n  <table class=\\\"data-table\\\" mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\r\\n    \\r\\n    <ng-container matColumnDef=\\\"id\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>ID</th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> <p class=\\\"text-capitalize\\\">{{     element.shipping.name}} {{element.shipping.last_name}} </p> </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <!-- Weight Column -->\\r\\n        <ng-container matColumnDef=\\\"date\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Date/Time </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.datePlaced}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <!-- Symbol Column -->\\r\\n        <ng-container matColumnDef=\\\"status\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n          <td class=\\\"text-uppercase\\\" mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\r\\n        </ng-container>\\r\\n      \\r\\n        <!-- Amount Column -->\\r\\n        <ng-container matColumnDef=\\\"amount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Amount </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element.items[0].totalPrice | currency:'USD': 'symbol-narrow' }} </td>\\r\\n        </ng-container>\\r\\n    \\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n\\r\\n  <mat-paginator #paginator\\r\\n    [length]=\\\"dataSource.data.length\\\"\\r\\n    [pageIndex]=\\\"0\\\"\\r\\n    [pageSize]=\\\"50\\\"\\r\\n    [pageSizeOptions]=\\\"['5', 25, 50, 100, 250]\\\">\\r\\n  </mat-paginator>\\r\\n</div>\"","import { Order } from './../models/order';\r\nimport { OrderService } from './../services/order.service';\r\nimport { ProductService } from './../services/product.service';\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { Product } from '../models/product';\r\n\r\n@Component({\r\n  selector: 'data-table',\r\n  templateUrl: './data-table.component.html',\r\n  styleUrls: ['./data-table.component.css']\r\n})\r\nexport class DataTableComponent implements OnInit  {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  dataSource: MatTableDataSource<Order>;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  // displayedColumns = ['name', 'price'];\r\n  displayedColumns: string[] = ['name', 'date', 'status', 'amount'];\r\n\r\n  constructor(private orderServ: OrderService) {\r\n    let id = localStorage.getItem('userId');\r\n    if(id){\r\n\r\n      this.orderServ.getUserId(id).subscribe(data => {\r\n        if(data) {\r\n        this.dataSource = new MatTableDataSource(data);\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n        } else {\r\n          return null;\r\n  \r\n        \r\n        }\r\n      });\r\n\r\n    }\r\n    \r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n    \r\n  }\r\n}\r\n","import { UsersService } from './../services/users/users.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminAuthGuard implements CanActivate {\r\n\r\n  constructor(private userServ: UsersService) {\r\n\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    return this.userServ.isAdmin;\r\n  }\r\n}\r\n","import { map } from 'rxjs/operators';\nimport { LoginsService } from './../services/logins/logins.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: LoginsService, private router: Router) { }\n\n  canActivate(route, state: RouterStateSnapshot) {\n \n    return this.auth.user$.pipe(map(user => {\n      if (user) {\n    \n        return true;\n      } \n      this.router.navigate(['/login'], {queryParams: { returnURL: state.url}});\n      return false;\n\n    }));\n  }\n}\n","import { ShoppingCart } from \"./shoppingCart\";\r\nimport { OrderItems } from \"./order-items\";\r\nimport { Shipping } from './shipping';\r\n\r\nexport class Order {\r\n    id?: string;\r\n    datePlaced: string;\r\n    grandTotal: number;\r\n    items: OrderItems[];\r\n    status: string;\r\n    delivered: boolean;\r\n    numberSold: number\r\n\r\n    constructor(public userId: string, public shipping: Shipping, shoppingCart: ShoppingCart) {\r\n        this.datePlaced = new Date().toLocaleString();\r\n        this.grandTotal = shoppingCart.cartTotalPrice;\r\n        this.status = 'new';\r\n        this.items = shoppingCart.items.map(i => {\r\n            return {\r\n                product: {\r\n                    id: shoppingCart.randomId,\r\n                    name: i.name,\r\n                    price: i.price,\r\n                    picture: i.picture,\r\n                    addons: i.addons,\r\n                    flavors: i.flavors,\r\n                    instruction: i.instruction\r\n                },\r\n                quantity: i.quantity,\r\n                totalPrice: i.totalPrice\r\n                \r\n                \r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n}","import { Product } from './product';\r\n\r\n\r\nexport class ShoppingCartItem {\r\n  id?: string;\r\n  name: string;\r\n  picture: string;\r\n  price: number; \r\n  addons?: string[];\r\n  flavors?: string;\r\n  instruction?: string;\r\n  quantity: number; \r\n\r\n  constructor(init?: Partial<ShoppingCartItem>) {\r\n    Object.assign(this, init);\r\n  }\r\n\r\n  get totalPrice() { return this.price * this.quantity; }\r\n\r\n\r\n}","\r\nimport { ShoppingCartItem } from './shopping-cart-item';\r\nimport { Product } from './product';\r\n\r\nexport class ShoppingCart { \r\n  items: ShoppingCartItem[] = [];\r\n\r\n  constructor(private itemsMap:  ShoppingCartItem[] ) {\r\n    this.itemsMap = itemsMap || [];\r\n    \r\n    for (let productId in itemsMap) {\r\n      let item = itemsMap[productId];\r\n      this.items.push(new ShoppingCartItem(item));\r\n    }\r\n  }\r\n\r\n  getQuantity(product: Product) {\r\n   \r\n     return product.quantity;\r\n      \r\n      \r\n  }\r\n\r\n\r\n  \r\n  get totalPrice() {\r\n    let sum = 0;\r\n    for (let productId in this.items) \r\n      sum += this.items[productId].totalPrice;\r\n    return sum;\r\n  }\r\n\r\n  get cartTotalPrice() {\r\n    let sum = 0;\r\n    let total = 0;\r\n    for (let productId in this.items) \r\n      sum += this.items[productId].totalPrice;\r\n      total +=sum;\r\n    return total;\r\n  }\r\n  \r\n  get totalItemsCount() {\r\n    let count = 0;\r\n    for (let productId in this.items) \r\n      count += this.items[productId].quantity;\r\n    return count;\r\n  }\r\n\r\n  get numberSold() {\r\n    let count = 0;\r\n    for ( let i in this.items) {\r\n      count += this.items[i].quantity;\r\n      return count;\r\n    }\r\n  }\r\n\r\n get randomId() {\r\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(2, 20);\r\n}\r\n}","import { HomeComponent } from './../../components/home/home.component';\r\nimport { AdminAuthGuard } from './../../guards/admin-auth.guard';\r\n\r\nimport { ManageCategoryComponent } from './../../admin/manage-category/manage-category.component';\r\nimport { ManageAddonsComponent } from './../../admin/manage-addons/manage-addons.component';\r\nimport { DeliveryConfirmationComponent } from './../../components/delivery-confirmation/delivery-confirmation.component';\r\nimport { AdminOrderDetailsComponent } from './../../admin/admin-order-details/admin-order-details.component';\r\nimport { OrderDetailsComponent } from './../../components/orders/order-details/order-details.component';\r\nimport { EditComponent } from './../../admin/edit/edit.component';\r\nimport { ProductFormComponent } from './../../admin/product-form/product-form.component';\r\nimport { CheckOutComponent } from './../../components/check-out/check-out.component';\r\nimport { AuthGuard } from './../../guards/auth-guard.service';\r\nimport { LoginComponent } from './../../components/login/login.component';\r\nimport { RegisterComponent } from './../../components/register/register.component';\r\nimport { NotfoundComponent } from './../../components/notfound/notfound.component';\r\nimport { MyordersComponent } from './../../components/myorders/myorders.component';\r\nimport { OrdersComponent } from './../../admin/orders/orders.component';\r\nimport { AdminProductsComponent } from './../../admin/admin-products/admin-products.component';\r\nimport { OrderSuccessComponent } from './../../components/order-success/order-success.component';\r\nimport { ShoppingCartComponent } from './../../components/shopping-cart/shopping-cart.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductsComponent } from '../../components/products/products.component';\r\nimport { MyprofileComponent } from '../../components/myprofile/myprofile.component';\r\nimport { ManageFlavorComponent } from '../../admin/manage-flavor/manage-flavor.component';\r\n\r\n \r\n\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  { path: '', component: ProductsComponent },\r\n  \r\n  { path: 'products', component: ProductsComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'products/:prodId', component: ProductsComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: 'shopping-cart', component: ShoppingCartComponent },\r\n\r\n  { path: 'order-success/:id', component: OrderSuccessComponent , canActivate: [ AuthGuard ] },\r\n  { path: 'admin/products', component: AdminProductsComponent, canActivate: [ AuthGuard, AdminAuthGuard] },\r\n  { path: 'admin/products', component: AdminProductsComponent, canActivate: [ AuthGuard, AdminAuthGuard] },\r\n  { path: 'admin/categories', component: ManageCategoryComponent, canActivate: [ AuthGuard, AdminAuthGuard] },\r\n  { path: 'admin/addons', component: ManageAddonsComponent, canActivate: [ AuthGuard, AdminAuthGuard] },\r\n  { path: 'admin/flavors', component: ManageFlavorComponent, canActivate: [ AuthGuard] },\r\n  \r\n  { path: 'myprofile', component: MyprofileComponent, canActivate: [ AuthGuard] },\r\n  { path: 'delivered/:id', component: DeliveryConfirmationComponent, canActivate: [ AuthGuard] },\r\n  { path: 'admin/products/new', component: ProductFormComponent, canActivate: [ AuthGuard, AdminAuthGuard ] },\r\n  { path: 'admin/products/:id', component: EditComponent, canActivate: [ AuthGuard, AdminAuthGuard] },\r\n  { path: 'admin/orders', component: OrdersComponent , canActivate: [ AuthGuard, AdminAuthGuard] },\r\n  { path: 'admin/orders/details/:id', component: AdminOrderDetailsComponent, canActivate: [ AuthGuard, AdminAuthGuard] },\r\n  { path: 'check-out', component: CheckOutComponent, canActivate: [ AuthGuard ]},\r\n  \r\n  { path: 'myorders', component: MyordersComponent , canActivate: [ AuthGuard ]},\r\n  { path: 'myorders/detail/:id', component: OrderDetailsComponent , canActivate: [ AuthGuard ]},\r\n  { path: '**', redirectTo: '/' }\r\n\r\n]\r\n\r\n@NgModule({\r\n\r\n  exports: [ RouterModule],\r\n  imports: [\r\n    RouterModule.forRoot(appRoutes)\r\n  ],\r\n  providers: []\r\n})\r\nexport class AppRoutesModule { }\r\n","import { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Addons } from './../models/addons';\r\nimport { AngularFirestoreCollection, AngularFirestoreDocument, AngularFirestore } from 'angularfire2/firestore';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddonsService {\r\n\r\n  addonsColl: AngularFirestoreCollection<Addons>;\r\n  addons: Observable<Addons[]>;\r\n\r\n  addonDoc: AngularFirestoreDocument<Addons>;\r\n  addon: Addons;\r\n\r\n  constructor(private db: AngularFirestore) { }\r\n\r\n  getAddons() {\r\n    this.addonsColl = this.db.collection<Addons>('addons', ref => ref.orderBy('name'));\r\n    this.addons = this.addonsColl.snapshotChanges().pipe(map(\r\n      actions => actions.map( a => {\r\n        const data = a.payload.doc.data() as Addons;\r\n        data.id = a.payload.doc.id;\r\n        return data;\r\n      })\r\n    ))\r\n    return this.addons;\r\n  }\r\n\r\n  addAddon(addon: Addons) {\r\n    this.addonsColl = this.db.collection<Addons>('addons');\r\n    return this.addonsColl.add(addon);\r\n  }\r\n\r\n  deleteAddon(id: string) {\r\n    return this.db.doc<Addons>(`addons/${id}`).delete();\r\n  }\r\n\r\n\r\n}\r\n","import { map } from 'rxjs/operators';\nimport { AngularFirestoreCollection, AngularFirestoreDocument, AngularFirestore } from 'angularfire2/firestore';\nimport { Injectable } from '@angular/core';\nimport { Order } from '../models/order';\nimport { Observable } from 'rxjs';\nimport { ShoppingCartService } from './shopping-cart.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminOrderService {\n\n  orderCollection: AngularFirestoreCollection<Order>;\n  orders: Observable<Order[]>;\n  orderDoc: AngularFirestoreDocument<Order>;\n  order: Observable<Order>;\n\n  constructor(private db: AngularFirestore, private shoppingCartServ: ShoppingCartService) { }\n\n\n  getAdminOrders() {\n    this.orderCollection = this.db.collection<Order>('orders', ref => ref.orderBy('datePlaced', 'desc'));\n    this.orders = this.orderCollection.snapshotChanges().pipe(map(\n      actions => actions.map( a => {\n        const data = a.payload.doc.data() as Order;\n        data.id = a.payload.doc.id;\n        console.log(data);\n        return data;\n      })\n    ))\n    return this.orders;\n  }\n\nupdateOrder(order: Order) {\n  this.orderDoc = this.db.doc<Order>(`orders/${order.id}`);\n  return this.orderDoc.update(order);\n}\n\ndeleteOrder(id: string) {\n  this.orderDoc = this.db.doc<Order>(`orders/${id}`);\n  return this.orderDoc.delete();\n}\n\n// get just a particular referral\ngetOrder(id: string): Observable<Order> {\n  this.orderDoc = this.db.doc<Order>(`orders/${id}`);\n  this.order = this.orderDoc.snapshotChanges().pipe(map(action => {\n    if (action.payload.exists === false) {\n\n      return null;\n\n    } else {\n      const data = action.payload.data() as Order;\n      data.id = action.payload.id;\n      return data;\n    }\n  })\n);\n  return this.order;\n}\n\n\n\n\n\n  }\n\n\n\n\n","import { Addons } from './../models/addons';\r\nimport { Category } from './../models/category';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n  categoriesColl: AngularFirestoreCollection<Category>;\r\n  categoryDoc: AngularFirestoreDocument<Category>\r\n  categories: Observable<Category[]>;\r\n  addOnsColl: AngularFirestoreCollection<Addons>;\r\n  addOnDoc: AngularFirestoreDocument<Addons>;\r\n  addons: Observable<Addons>;\r\n\r\n\r\n  constructor(private db: AngularFirestore) { }\r\n\r\n  getCategories() {\r\n    this.categoriesColl = this.db.collection<Category>('categories', ref => ref.orderBy('name'));\r\n    this.categories = this.categoriesColl.snapshotChanges().pipe(map(\r\n      actions => actions.map( a => {\r\n        const data = a.payload.doc.data() as Category;\r\n        data.id = a.payload.doc.id;\r\n        return data;\r\n      })\r\n    ))\r\n    return this.categories;\r\n  }\r\n\r\n  addCategory(category: Category) {\r\n\r\n    return this.db.collection<Category>(`categories`).doc(`${category.name}`).set(category);\r\n\r\n  }\r\n\r\n  deleteCategory(id: string) {\r\n    return this.db.doc(`categories/${id}`).delete();\r\n  }\r\n\r\n}\r\n","import { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Flavors } from './../models/flavors';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FlavorsService {\r\n\r\n  constructor(private db: AngularFirestore) { }\r\n\r\n  flavorsColl: AngularFirestoreCollection<Flavors>;\r\n  flavors: Observable<Flavors[]>;\r\n\r\n  flavorDoc: AngularFirestoreDocument<Flavors>;\r\n  flavor: Flavors;\r\n\r\n  getFlavors() {\r\n    this.flavorsColl = this.db.collection<Flavors>('flavors', ref => ref.orderBy('name'));\r\n    this.flavors = this.flavorsColl.snapshotChanges().pipe(map(\r\n      actions => actions.map( a => {\r\n        const data = a.payload.doc.data() as Flavors;\r\n        data.id = a.payload.doc.id;\r\n        return data;\r\n      })\r\n    ))\r\n    return this.flavors;\r\n  }\r\n\r\n  addFlavor(addon: Flavors) {\r\n    this.flavorsColl = this.db.collection<Flavors>('flavors');\r\n    return this.flavorsColl.add(addon);\r\n  }\r\n\r\n  deleteFlavor(id: string) {\r\n    return this.db.doc<Flavors>(`flavors/${id}`).delete();\r\n  }\r\n\r\n}\r\n","import { async } from '@angular/core/testing';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport { Injectable } from '@angular/core';\r\nimport * as firebase from 'firebase';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Injectable()\r\nexport class LoginsService {\r\n\r\n\r\n  user$: Observable<firebase.User>\r\n  constructor(private authServ: AngularFireAuth, private msg: ToastrService, private router: ActivatedRoute, private route: Router) {\r\n\r\n    this.user$ = authServ.authState;\r\n   }\r\n\r\n  register(email: string, password: string) {\r\n   return this.authServ.auth.createUserWithEmailAndPassword(email, password);\r\n    \r\n  }\r\n\r\n  //return a promise of the logim state\r\n  getState() {\r\n    return this.authServ.authState.pipe(map(auth => auth));\r\n  }\r\n\r\n  //return a login promise\r\n async login(email: string, password: string) {\r\n    let returnURL= this.router.snapshot.queryParamMap.get('returnURL') || '/';\r\n    await this.authServ.auth.signInWithEmailAndPassword(email, password).then(res => localStorage.setItem('userId', res.user.uid));\r\n    this.route.navigateByUrl(returnURL);\r\n      \r\n  }\r\n\r\n  logout() {\r\n    let userId = localStorage.getItem('userId');\r\n    if (userId) localStorage.removeItem('userId');\r\n    return this.authServ.auth.signOut();\r\n    \r\n  }\r\n}\r\n","import { ShoppingCartService } from './shopping-cart.service';\r\nimport { Order } from './../models/order';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n\r\n  orderCollection: AngularFirestoreCollection<Order>;\r\n  orders: Observable<Order[]>;\r\n  orderDoc: AngularFirestoreDocument<Order>;\r\n  order: Observable<Order>;\r\n  newOrder = new BehaviorSubject<boolean>(false);\r\n  newOrderSubmitted = this.newOrder.asObservable();\r\n\r\n  constructor(private db: AngularFirestore, private shoppingCartServ: ShoppingCartService) { }\r\n\r\n\r\n  checkForNewOrder(value: boolean) {\r\n    this.newOrder.next(value);\r\n  }\r\n\r\n\r\n async placeOrder(order: Order) {\r\n\r\n    let result = await this.db.collection('orders', ref => ref.orderBy('datePlaced'));\r\n    if(result)  this.shoppingCartServ.clearCart();\r\n    return result.add(order)\r\n    \r\n\r\n    \r\n  }\r\n\r\ngetOrderByUser(id: string) {\r\n\r\n  return this.db.collection<Order>('orders', ref => ref.where('userId', '==', id)).valueChanges();\r\n  \r\n}\r\n\r\ngetUserId(id: string) {\r\n  this.orderCollection = this.db.collection<Order>('orders', ref => ref.where('userId', '==', id).orderBy('datePlaced', 'desc'));\r\n  this.orders = this.orderCollection.snapshotChanges().pipe(map(\r\n    actions => actions.map( a => {\r\n      const data = a.payload.doc.data() as Order;\r\n      data.id = a.payload.doc.id;\r\n      return data;\r\n    })\r\n  ))\r\n  return this.orders;\r\n}\r\n  \r\n\r\n  getOrders() {\r\n    this.orderCollection = this.db.collection('orders');\r\n    return this.orderCollection;\r\n  }\r\n\r\n\r\n  getAllOrders() {\r\n    this.orderCollection = this.db.collection<Order>('orders', ref => ref.orderBy('datePlaced', 'desc'));\r\n    this.orders = this.orderCollection.snapshotChanges().pipe(map(\r\n      actions => actions.map( a => {\r\n        const data = a.payload.doc.data() as Order;\r\n        data.id = a.payload.doc.id;\r\n        return data;\r\n      })\r\n    ))\r\n    return this.orders;\r\n  }\r\n\r\n\r\n}\r\n","import { map } from 'rxjs/operators';\r\nimport { Product } from './../models/product';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  productsColl: AngularFirestoreCollection<Product>;\r\n  productDoc: AngularFirestoreDocument<Product>;\r\n  products: Observable<Product[]>;\r\n  product: Observable<Product>;\r\n\r\n  constructor(private db: AngularFirestore) { \r\n    \r\n  }\r\n\r\n  saveProduct(product: Product) {\r\n    return this.db.collection('products').add(product);\r\n  }\r\n\r\n  getProducts() {\r\n    this.productsColl = this.db.collection<Product>('products', ref => ref.orderBy('updated', 'desc'));\r\n    this.products = this.productsColl.snapshotChanges().pipe(map(\r\n      actions => actions.map( a => {\r\n        const data = a.payload.doc.data() as Product;\r\n        data.id = a.payload.doc.id;\r\n        return data;\r\n      })\r\n    ))\r\n    return this.products;\r\n  }\r\n\r\n\r\n   // get a player\r\n   getProduct(id: string): Observable<Product> {\r\n    this.productDoc = this.db.doc<Product>(`products/${id}`);\r\n    this.product = this.productDoc.snapshotChanges().pipe(map(action => {\r\n      if (action.payload.exists === false) {\r\n\r\n        return null;\r\n\r\n      } else {\r\n        const data = action.payload.data() as Product;\r\n        data.id = action.payload.id;\r\n        return data;\r\n      }\r\n    }))\r\n\r\n    return this.product;\r\n  }\r\n\r\n  updateProduct(product: Product) {\r\n    this.productDoc = this.db.doc(`products/${product.id}`);\r\n    return this.productDoc.update(product);\r\n  }\r\n\r\n  deleteProduct(id: string) {\r\n    this.productDoc = this.db.doc(`products/${id}`);\r\n    return this.productDoc.delete();\r\n  }\r\n\r\n\r\n\r\n  }\r\n\r\n","import { ActivatedRoute } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreDocument, AngularFirestoreCollection } from 'angularfire2/firestore';\r\nimport { Product } from '../models/product';\r\nimport {  map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { ShoppingCart } from '../models/shoppingCart';\r\nimport { ShoppingCartItem } from '../models/shopping-cart-item';\r\n\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShoppingCartService {\r\n\r\n  productDoc: AngularFirestoreDocument<any>;\r\n  itemsColl: AngularFirestoreCollection<ShoppingCartItem>;\r\n  items: Observable<ShoppingCart>;\r\n  product: Observable<any>;\r\n  cartDoc: AngularFirestoreDocument<ShoppingCartItem>;\r\n  cart: Observable<ShoppingCartItem>;\r\n \r\n  constructor(private db: AngularFirestore) { \r\n    \r\n  }\r\n\r\n  private createCart() {\r\n    return  this.db.collection('shopping-carts').add({dateCreated: new Date().toLocaleString() });\r\n\r\n  }\r\n\r\n  private getItem(cartId: string, productId: string) {\r\n    return this.db.doc(`shopping-carts/${cartId}/items/${productId}`);\r\n  }\r\n\r\n\r\n  private async getOrCreateCartId(): Promise<string> {\r\n    let cartId = localStorage.getItem('cartId');\r\n    if (!cartId) {\r\n      let result = await this.createCart();\r\n      localStorage.setItem('cartId', result.id);\r\n      return result.id;\r\n   \r\n    }\r\n    // if cartId in local storage, return it.\r\n    return cartId;\r\n  }\r\n\r\n  // get a cart \r\n   async getCart(): Promise<Observable<ShoppingCart>> {\r\n    let cartId= await this.getOrCreateCartId();\r\n    return this.db.collection<ShoppingCartItem>(`shopping-carts/${cartId}/items`).valueChanges().pipe(map(x =>  new ShoppingCart(x)))\r\n    \r\n  }\r\n\r\n // add to cart\r\n  async addToCart(product: Product) {\r\n    let cartId = await this.getOrCreateCartId();\r\n    this.productDoc= this.getItem(cartId, product.id);\r\n     this.productDoc.get().subscribe(doc => {\r\n       if (doc.exists) {\r\n         let q = doc.data() as ShoppingCartItem;\r\n         this.productDoc.update({quantity: q.quantity + 1, addons: q.addons, flavors: q.flavors });\r\n       } else {\r\n         this.productDoc.set({\r\n           id: product.id,\r\n           name: product.name,\r\n           price: product.price,\r\n           picture: product.picture,\r\n           addons: product.addons,\r\n           flavors: product.flavors,\r\n           instruction: product.instruction,\r\n           quantity: 1\r\n           });\r\n       }\r\n     })\r\n  \r\n    \r\n  }\r\n\r\n  async updateCart(product: Product) {\r\n    let cartId = await this.getOrCreateCartId();\r\n    this.productDoc= this.getItem(cartId, product.id);\r\n    return this.productDoc.update(product);\r\n  }\r\n\r\n   // remove from cart \r\n  async removeFromCart(product: Product) {\r\n   // this.updateItem(product, -1);\r\n    let cartId = await this.getOrCreateCartId();\r\n    this.productDoc= this.getItem(cartId, product.id);\r\n     this.productDoc.get().subscribe(doc => {\r\n       if (doc.exists) {\r\n         let q = doc.data() as Product;\r\n         let remainin = q.quantity;\r\n         //if(remainin <= 1) this.productDoc.delete();\r\n        \r\n         this.productDoc.update({quantity: q.quantity - 1 });\r\n\r\n         if (q.quantity === 1) {this.productDoc.delete()}\r\n         \r\n       } \r\n     })\r\n  \r\n  \r\n   }\r\n\r\n   async getOneCart(id: string) {\r\n        let cartId = await this.getOrCreateCartId();\r\n        if(cartId) {\r\n        this.cartDoc = this.db.doc<ShoppingCartItem>(`shopping-carts/${cartId}/items/${id}`);\r\n        this.cart = this.cartDoc.snapshotChanges().pipe(map(actions => {\r\n          if(actions.payload.exists) {\r\n          let data = actions.payload.data() as ShoppingCartItem;\r\n         // data.id = actions.payload.id; \r\n          data.id = actions.payload.id\r\n          return data;\r\n          } else return null;\r\n          \r\n        }))\r\n      \r\n        return this.cart;\r\n      }\r\n   }\r\n\r\n\r\n  async clearCart() { \r\n    let cartId = await this.getOrCreateCartId();\r\n    let items = this.db.collection('shopping-carts/' + cartId + '/items');\r\n    items.get().forEach(i => i.forEach(res => {\r\n   \r\n        return  this.db.doc(`shopping-carts/${cartId}/items/${res.id}`).delete();\r\n     \r\n    }))\r\n      \r\n   \r\n    \r\n  }\r\n\r\n   async getItemsCount() {\r\n    let cartId = await this.getOrCreateCartId();\r\n    if ( cartId) return this.db.collection<ShoppingCartItem>('shopping-carts/' + cartId + '/items');\r\n    \r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n  \r\n\r\n","import { map, switchMap } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection, AngularFirestoreDocument } from 'angularfire2/firestore';\r\nimport { Observable, of } from 'rxjs';\r\nimport { User } from '../../models/user';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n\r\n  usersCollection: AngularFirestoreCollection<User>;\r\n  users: Observable<User[]>;\r\n  userDoc: AngularFirestoreDocument<User>;\r\n  user: Observable<User>;\r\n  current: Observable<User>;\r\n\r\n  constructor(private fb: AngularFirestore, private auth: AngularFireAuth) { \r\n     \r\n    this.user = this.auth.authState.pipe(\r\n      switchMap(user => {\r\n        if (user) {\r\n          return this.fb.doc<User>(`users/${user.uid}`).valueChanges()\r\n        } else {\r\n          return of(null)\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\nget isAdmin(){\r\n  let userId = localStorage.getItem('userId');\r\n  if(userId) {\r\n    return this.getUser(userId).pipe(map(user => user.isAdmin));\r\n  } else {\r\n    return false || null;\r\n  }\r\n}\r\n\r\n//get all users\r\ngetUsers() {\r\n  this.usersCollection = this.fb.collection<User>('users', ref => ref.orderBy('name'));\r\n\r\n  this.users = this.usersCollection.snapshotChanges().pipe(\r\n    map(actions => actions.map(\r\n      a => {\r\n        const data = a.payload.doc.data() as User;\r\n        data.id = a.payload.doc.id;\r\n        return data;\r\n\r\n      }\r\n    ))\r\n  );\r\n  return this.users;\r\n}\r\n\r\n//add user\r\naddUser(user: User, id: string) {\r\n\r\n this.fb.collection('users').doc(id).set(user).then( () => console.log(\"Success\")).catch(err => console.log(err));\r\n}\r\n\r\ndeleteUser(id: string) {\r\n  this.userDoc = this.fb.doc(`users/${id}`);\r\n  this.userDoc.delete();\r\n}\r\n\r\nupdateUser(user: User) {\r\n  this.userDoc = this.fb.doc(`users/${user.id}`);\r\n  return this.userDoc.update(user);\r\n\r\n}\r\n\r\ngetUser(id: string): Observable<User> {\r\n  this.userDoc = this.fb.doc<User>(`users/${id}`);\r\n  this.user = this.userDoc.snapshotChanges().pipe(map(action => {\r\n    if (action.payload.exists === false) {\r\n      return null;\r\n    } else {\r\n      const data = action.payload.data() as User;\r\n      data.id = action.payload.id\r\n      return data;\r\n    }\r\n  }))\r\n  return this.user;\r\n}\r\n\r\ngetUserByEmail(email: string) {\r\n  return this.fb.doc(`users/${email}`);\r\n}\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n      apiKey: 'AIzaSyDgKIjthz1nDb6cMuqs6qdIGHlB85mTH88',\n      authDomain: 'antojitoschef-9cb63.firebaseapp.com',\n      databaseURL: 'https://antojitoschef-9cb63.firebaseio.com',\n      projectId: 'antojitoschef-9cb63',\n      storageBucket: 'antojitoschef-9cb63.appspot.com',\n      messagingSenderId: '10453201072'\n\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}